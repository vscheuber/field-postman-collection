{
	"info": {
		"_postman_id": "8c31a8ec-c5ec-46c9-8533-233675716e78",
		"name": "_ForgeRock Field Collection",
		"description": "ForgeRock Identity Cloud and Platform REST APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/am",
			"item": [
				{
					"name": "/authenticate",
					"item": [
						{
							"name": "Trees",
							"item": [
								{
									"name": "Simple - Stage 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"authId\", jsonData.authId);",
													"//postman.setEnvironmentVariable(\"OnboardingReCAPTCHA_stage1\", responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-API-Version",
												"value": "resource=2.0, protocol=1.0",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Username",
												"value": "vscheuber@gmail.com",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Password",
												"value": "Password1!",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate?authIndexType=service&authIndexValue=PasswordGrant",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"authenticate"
											],
											"query": [
												{
													"key": "authIndexType",
													"value": "service"
												},
												{
													"key": "authIndexValue",
													"value": "PasswordGrant"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Simple - Stage 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"//postman.setEnvironmentVariable(\"authId\", jsonData.authId);",
													"//postman.setEnvironmentVariable(\"OnboardingReCAPTCHA_stage1\", responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-API-Version",
												"type": "text",
												"value": "resource=2.0, protocol=1.0"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"authId\": \"{{authId}}\",\n    \"callbacks\": [\n        {\n            \"type\": \"NameCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"User Name\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken1\",\n                    \"value\": \"vscheuber@gmail.com\"\n                }\n            ],\n            \"_id\": 0\n        },\n        {\n            \"type\": \"PasswordCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"Password\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken2\",\n                    \"value\": \"Password1!\"\n                }\n            ],\n            \"_id\": 1\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate?authIndexType=service&authIndexValue=PasswordGrant",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"authenticate"
											],
											"query": [
												{
													"key": "authIndexType",
													"value": "service"
												},
												{
													"key": "authIndexValue",
													"value": "PasswordGrant"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "TestLoginWithEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"authId\", jsonData.authId);",
													"//postman.setEnvironmentVariable(\"OnboardingReCAPTCHA_stage1\", responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-API-Version",
												"type": "text",
												"value": "resource=2.0, protocol=1.0"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-OpenAM-Username",
												"value": "vscheuber@gmail.com",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Password",
												"value": "{{openamPassword}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate?authIndexType=service&authIndexValue=TestLoginWithEmail2",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"authenticate"
											],
											"query": [
												{
													"key": "authIndexType",
													"value": "service"
												},
												{
													"key": "authIndexValue",
													"value": "TestLoginWithEmail2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "APIProtected Tree",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"authId\", jsonData.authId);",
													"//postman.setEnvironmentVariable(\"OnboardingReCAPTCHA_stage1\", responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-API-Version",
												"value": "resource=2.0, protocol=1.0",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Username",
												"value": "vscheuber@gmail.com",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Password",
												"value": "Password1!",
												"type": "text"
											},
											{
												"key": "X-API-Key",
												"value": "javaAgent",
												"type": "text"
											},
											{
												"key": "X-API-Secret",
												"value": "12345",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate?authIndexType=service&authIndexValue=APIProtection",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"authenticate"
											],
											"query": [
												{
													"key": "authIndexType",
													"value": "service"
												},
												{
													"key": "authIndexValue",
													"value": "APIProtection"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "API Protected Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-API-Version",
												"value": "resource=2.0, protocol=1.0",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Username",
												"value": "vscheuber@gmail.com",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Password",
												"value": "Password1!",
												"type": "text"
											},
											{
												"key": "X-API-Key",
												"value": "javaAgent",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-API-Key",
												"value": "oauth2App",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-API-Key",
												"value": "api_client",
												"type": "text"
											},
											{
												"key": "X-API-Secret",
												"value": "secret",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate?authIndexType=service&authIndexValue=ProtectedLogin",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"authenticate"
											],
											"query": [
												{
													"key": "authIndexType",
													"value": "service"
												},
												{
													"key": "authIndexValue",
													"value": "ProtectedLogin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Debug",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-API-Version",
												"value": "resource=2.0, protocol=1.0",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Username",
												"value": "vscheuber@gmail.com",
												"type": "text"
											},
											{
												"key": "X-OpenAM-Password",
												"value": "Password1!",
												"type": "text"
											},
											{
												"key": "X-API-Key",
												"value": "javaAgent",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-API-Key",
												"value": "oauth2App",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-API-Key",
												"value": "api_client",
												"type": "text"
											},
											{
												"key": "X-API-Secret",
												"value": "secret",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate?authIndexType=service&authIndexValue=Debug",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"authenticate"
											],
											"query": [
												{
													"key": "authIndexType",
													"value": "service"
												},
												{
													"key": "authIndexValue",
													"value": "Debug"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"authId\", jsonData.authId);",
													"//postman.setEnvironmentVariable(\"OnboardingReCAPTCHA_stage1\", responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-API-Version",
												"value": "resource=2.0, protocol=1.0",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate?authIndexType=service&authIndexValue=Registration",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"authenticate"
											],
											"query": [
												{
													"key": "authIndexType",
													"value": "service"
												},
												{
													"key": "authIndexValue",
													"value": "Registration"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Tenant Admin Login",
							"item": [
								{
									"name": "Authenticate admin 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"authId\", jsonData.authId);",
													"",
													"// test outcome",
													"pm.test(\"Authenticate Admin - Step 1\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.withBody;",
													"    pm.response.to.be.json;",
													"    pm.expect(jsonData.authId).to.exist;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-OpenAM-Username",
												"value": "{{openamAdmin}}"
											},
											{
												"key": "X-OpenAM-Password",
												"value": "{{openamAdminPwd}}"
											},
											{
												"key": "Accept-API-Version",
												"value": "resource=2.0, protocol=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json/authenticate",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Authenticate admin 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"openamSSOToken\", jsonData.tokenId);",
													"",
													"// test outcome",
													"pm.test(\"Authenticate Admin - Step 2\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.withBody;",
													"    pm.response.to.be.json;",
													"    pm.expect(jsonData.tokenId).to.exist;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept-API-Version",
												"value": "resource=2.0, protocol=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"authId\": \"{{authId}}\",\n    \"callbacks\": [\n        {\n            \"type\": \"TextOutputCallback\",\n            \"output\": [\n                {\n                    \"name\": \"message\",\n                    \"value\": \"message-891\"\n                },\n                {\n                    \"name\": \"messageType\",\n                    \"value\": \"0\"\n                }\n            ]\n        },\n        {\n            \"type\": \"ConfirmationCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"\"\n                },\n                {\n                    \"name\": \"messageType\",\n                    \"value\": 0\n                },\n                {\n                    \"name\": \"options\",\n                    \"value\": [\n                        \"Set up\"\n                    ]\n                },\n                {\n                    \"name\": \"optionType\",\n                    \"value\": -1\n                },\n                {\n                    \"name\": \"defaultOption\",\n                    \"value\": 0\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken2\",\n                    \"value\": 0\n                }\n            ]\n        },\n        {\n            \"type\": \"HiddenValueCallback\",\n            \"output\": [\n                {\n                    \"name\": \"value\",\n                    \"value\": \"false\"\n                },\n                {\n                    \"name\": \"id\",\n                    \"value\": \"skip-input-891\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken3\",\n                    \"value\": \"Skip\"\n                }\n            ]\n        },\n        {\n            \"type\": \"TextOutputCallback\",\n            \"output\": [\n                {\n                    \"name\": \"message\",\n                    \"value\": \"var skipContainer = document.createElement(\\\"div\\\");skipContainer.style = \\\"width:100%\\\";skipContainer.innerHTML = \\\"<button id='skip-link-891' class='btn btn-block btn-link' type='submit'>Skip for now</button>\\\";document.getElementById(\\\"skip-input-891\\\").parentNode.append(skipContainer);document.getElementsByClassName(\\\"callback-component\\\").forEach(  function (e) {    var message = e.firstElementChild;    if (message.firstChild && message.firstChild.nodeName == \\\"#text\\\" && message.firstChild.nodeValue.trim() == \\\"message-891\\\") {      message.align = \\\"center\\\";      message.innerHTML = \\\"<h2 class='h2'>Set up 2-step verification</h2><div style='margin-bottom:1em'>Protect your account by adding a second step after entering your password to verify it's you signing in.</div>\\\";    }  })\"\n                },\n                {\n                    \"name\": \"messageType\",\n                    \"value\": \"4\"\n                }\n            ]\n        },\n        {\n            \"type\": \"TextOutputCallback\",\n            \"output\": [\n                {\n                    \"name\": \"message\",\n                    \"value\": \"document.getElementById(\\\"skip-link-891\\\").onclick = function() {  document.getElementById(\\\"skip-input-891\\\").value = \\\"Skip\\\";  document.getElementById(\\\"loginButton_0\\\").click();  return false;}\"\n                },\n                {\n                    \"name\": \"messageType\",\n                    \"value\": \"4\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json/authenticate",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "/authorize (PKCE) IDM ADMIN TOKEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sdk = require('postman-collection'),",
													"url = new sdk.Url(postman.getResponseHeader(\"Location\")),",
													"      urlJson = url.toJSON();",
													"query = sdk.QueryParam.parse(url.getQueryString());",
													"",
													"var code = query[0].value;",
													"console.log(\"code: \" + code);",
													"postman.setEnvironmentVariable(\"openamAuthZCode\", code);",
													"",
													"// test outcome",
													"pm.test(\"/authorize (PKCE) IDM ADMIN TOKEN\", function () {",
													"    pm.response.to.have.status(302);",
													"    pm.expect(pm.response.headers.get('Location')).to.contain('code=');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function base64URLEncode(words) {",
													"    return CryptoJS.enc.Base64.stringify(words)",
													"        .replace(/\\+/g, '-')",
													"        .replace(/\\//g, '_')",
													"        .replace(/=/g, '');",
													"}",
													"",
													"var verifier = base64URLEncode(CryptoJS.lib.WordArray.random(50));",
													"postman.setEnvironmentVariable(\"verifier\", verifier);",
													"",
													"var challenge = base64URLEncode(CryptoJS.SHA256(verifier));",
													"postman.setEnvironmentVariable(\"challenge\", challenge);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followRedirects": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-ForgeRock-TransactionId",
												"value": "{{transIdPrefix}}-authZ-{{$timestamp}}"
											},
											{
												"key": "Accept-API-Version",
												"type": "text",
												"value": "resource=1.0"
											},
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/oauth2/authorize?response_type=code&save_consent=1&decision=Allow&scope=fr:idm:*&client_id={{admin_client_id}}&redirect_uri={{redirect_uri}}&code_challenge={{challenge}}&code_challenge_method=S256&csrf={{openamSSOToken}}",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"oauth2",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "save_consent",
													"value": "1"
												},
												{
													"key": "decision",
													"value": "Allow"
												},
												{
													"key": "scope",
													"value": "fr:idm:*"
												},
												{
													"key": "client_id",
													"value": "{{admin_client_id}}"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirect_uri}}"
												},
												{
													"key": "code_challenge",
													"value": "{{challenge}}"
												},
												{
													"key": "code_challenge_method",
													"value": "S256"
												},
												{
													"key": "iPlanetDirectoryPro",
													"value": "GG7XItgjd_9rck6sUb6XaaGp1Dg.*AAJTSQACMDEAAlNLABxEMDVmd0JIWVlZd2F0bEFEN2daNlFzVUNYbmM9AAR0eXBlAANDVFMAAlMxAAA.*",
													"disabled": true
												},
												{
													"key": "acr_values",
													"value": "push",
													"disabled": true
												},
												{
													"key": "email",
													"value": "vscheuber@gmail.com",
													"disabled": true
												},
												{
													"key": "csrf",
													"value": "{{openamSSOToken}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/access_token (PKCE) IDM ADMIN TOKEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
													"postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
													"postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);",
													"",
													"// test outcome",
													"pm.test(\"/access_token (PKCE) IDM ADMIN TOKEN\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.withBody;",
													"    pm.response.to.be.json;",
													"    pm.expect(jsonData.access_token).to.exist;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "X-ForgeRock-TransactionId",
												"value": "{{transIdPrefix}}-at_PKCE-{{$timestamp}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/oauth2/access_token?grant_type=authorization_code&code={{openamAuthZCode}}&redirect_uri={{redirect_uri}}&code_verifier={{verifier}}&client_id={{admin_client_id}}",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"oauth2",
												"access_token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{openamAuthZCode}}"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirect_uri}}"
												},
												{
													"key": "code_verifier",
													"value": "{{verifier}}"
												},
												{
													"key": "client_id",
													"value": "{{admin_client_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "User Login",
							"item": [
								{
									"name": "Authenticate user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"openamSSOToken\", jsonData.tokenId);",
													"",
													"// test outcome",
													"pm.test(\"Authenticate user\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.withBody;",
													"    pm.response.to.be.json;",
													"    pm.expect(jsonData.tokenId).to.exist;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-OpenAM-Username",
												"value": "{{openamUser}}"
											},
											{
												"key": "X-OpenAM-Password",
												"value": "{{openamPassword}}"
											},
											{
												"key": "Accept-API-Version",
												"value": "resource=2.0"
											},
											{
												"key": "X-ForgeRock-TransactionId",
												"value": "Volker-TX-ID",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate?authIndexType=service&authIndexValue=PasswordGrant",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"authenticate"
											],
											"query": [
												{
													"key": "authIndexType",
													"value": "service"
												},
												{
													"key": "authIndexValue",
													"value": "PasswordGrant"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/authorize (PKCE) IDM User Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sdk = require('postman-collection'),",
													"url = new sdk.Url(postman.getResponseHeader(\"Location\")),",
													"      urlJson = url.toJSON();",
													"query = sdk.QueryParam.parse(url.getQueryString());",
													"",
													"var code = query[0].value;",
													"console.log(\"code: \" + code);",
													"postman.setEnvironmentVariable(\"openamAuthZCode\", code);",
													"",
													"// test outcome",
													"pm.test(\"/authorize (PKCE) IDM User Token\", function () {",
													"    pm.response.to.have.status(302);",
													"    pm.expect(pm.response.headers.get('Location')).to.contain('code=');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function base64URLEncode(words) {",
													"    return CryptoJS.enc.Base64.stringify(words)",
													"        .replace(/\\+/g, '-')",
													"        .replace(/\\//g, '_')",
													"        .replace(/=/g, '');",
													"}",
													"",
													"var verifier = base64URLEncode(CryptoJS.lib.WordArray.random(50));",
													"postman.setEnvironmentVariable(\"verifier\", verifier);",
													"",
													"var challenge = base64URLEncode(CryptoJS.SHA256(verifier));",
													"postman.setEnvironmentVariable(\"challenge\", challenge);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-ForgeRock-TransactionId",
												"value": "{{transIdPrefix}}-authZ-{{$timestamp}}"
											},
											{
												"key": "Accept-API-Version",
												"type": "text",
												"value": "resource=1.0"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/oauth2{{realm}}/authorize?response_type=code&save_consent=1&decision=Allow&scope=fr:idm:*&client_id={{enduser_client_id}}&redirect_uri={{enduser_redirect_uri}}&code_challenge={{challenge}}&code_challenge_method=S256&csrf={{openamSSOToken}}",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"oauth2{{realm}}",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "save_consent",
													"value": "1"
												},
												{
													"key": "decision",
													"value": "Allow"
												},
												{
													"key": "scope",
													"value": "fr:idm:*"
												},
												{
													"key": "client_id",
													"value": "{{enduser_client_id}}"
												},
												{
													"key": "redirect_uri",
													"value": "{{enduser_redirect_uri}}"
												},
												{
													"key": "code_challenge",
													"value": "{{challenge}}"
												},
												{
													"key": "code_challenge_method",
													"value": "S256"
												},
												{
													"key": "iPlanetDirectoryPro",
													"value": "GG7XItgjd_9rck6sUb6XaaGp1Dg.*AAJTSQACMDEAAlNLABxEMDVmd0JIWVlZd2F0bEFEN2daNlFzVUNYbmM9AAR0eXBlAANDVFMAAlMxAAA.*",
													"disabled": true
												},
												{
													"key": "acr_values",
													"value": "push",
													"disabled": true
												},
												{
													"key": "email",
													"value": "vscheuber@gmail.com",
													"disabled": true
												},
												{
													"key": "csrf",
													"value": "{{openamSSOToken}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/access_token (PKCE) IDM User Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
													"postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
													"postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);",
													"",
													"// test outcome",
													"pm.test(\"/access_token (PKCE) IDM User Token\", function () {",
													"    pm.response.to.have.status(200);",
													"    pm.response.to.be.withBody;",
													"    pm.response.to.be.json;",
													"    pm.expect(jsonData.access_token).to.exist;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "X-ForgeRock-TransactionId",
												"value": "{{transIdPrefix}}-at_PKCE-{{$timestamp}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{host}}{{am-context}}/oauth2{{realm}}/access_token?grant_type=authorization_code&code={{openamAuthZCode}}&redirect_uri={{enduser_redirect_uri}}&code_verifier={{verifier}}&client_id={{enduser_client_id}}",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"oauth2{{realm}}",
												"access_token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{openamAuthZCode}}"
												},
												{
													"key": "redirect_uri",
													"value": "{{enduser_redirect_uri}}"
												},
												{
													"key": "code_verifier",
													"value": "{{verifier}}"
												},
												{
													"key": "client_id",
													"value": "{{enduser_client_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Authenticate agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamSSOToken\", jsonData.tokenId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-OpenAM-Username",
										"value": "iis"
									},
									{
										"key": "X-OpenAM-Password",
										"value": "{{openamPassword}}"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-authN-{{$timestamp}}"
									},
									{
										"key": "Accept-API-Version",
										"type": "text",
										"value": "resource=1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/openam/json{{realm}}/authenticate?authIndexType=module&authIndexValue=Application",
									"host": [
										"{{host}}"
									],
									"path": [
										"openam",
										"json{{realm}}",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "module"
										},
										{
											"key": "authIndexValue",
											"value": "Application"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/oauth2",
					"item": [
						{
							"name": "/authorize",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sdk = require('postman-collection'),",
											"url = new sdk.Url(postman.getResponseHeader(\"Location\")),",
											"      urlJson = url.toJSON();",
											"query = sdk.QueryParam.parse(url.getQueryString());",
											"",
											"console.log(urlJson);",
											"console.log(query);",
											"console.log(query[0].value);",
											"postman.setEnvironmentVariable(\"openamAuthZCode\", query[0].value);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/authorize?response_type=code&save_consent=1&decision=Allow&scope=profile&client_id={{client_id}}&redirect_uri={{host}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "code"
										},
										{
											"key": "save_consent",
											"value": "1"
										},
										{
											"key": "decision",
											"value": "Allow"
										},
										{
											"key": "scope",
											"value": "profile"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/access_token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/access_token?grant_type=authorization_code&code={{openamAuthZCode}}&redirect_uri={{host}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"access_token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "authorization_code"
										},
										{
											"key": "code",
											"value": "{{openamAuthZCode}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/authorize (PKCE)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sdk = require('postman-collection'),",
											"url = new sdk.Url(postman.getResponseHeader(\"Location\")),",
											"      urlJson = url.toJSON();",
											"query = sdk.QueryParam.parse(url.getQueryString());",
											"",
											"var code = query[0].value;",
											"console.log(\"code: \" + code);",
											"postman.setEnvironmentVariable(\"openamAuthZCode\", code);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function base64URLEncode(words) {",
											"    return CryptoJS.enc.Base64.stringify(words)",
											"        .replace(/\\+/g, '-')",
											"        .replace(/\\//g, '_')",
											"        .replace(/=/g, '');",
											"}",
											"",
											"var verifier = base64URLEncode(CryptoJS.lib.WordArray.random(50));",
											"postman.setEnvironmentVariable(\"verifier\", verifier);",
											"",
											"var challenge = base64URLEncode(CryptoJS.SHA256(verifier));",
											"postman.setEnvironmentVariable(\"challenge\", challenge);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-authZ-{{$timestamp}}"
									},
									{
										"key": "Accept-API-Version",
										"type": "text",
										"value": "resource=1.0"
									},
									{
										"key": "{{ssoCookieName}}",
										"value": "{{openamSSOToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/authorize?response_type=code&save_consent=1&decision=Allow&scope=openid uid givenName sn&client_id={{client_id}}&redirect_uri={{host}}&code_challenge={{challenge}}&code_challenge_method=S256",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "code"
										},
										{
											"key": "save_consent",
											"value": "1"
										},
										{
											"key": "decision",
											"value": "Allow"
										},
										{
											"key": "scope",
											"value": "openid uid givenName sn"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										},
										{
											"key": "code_challenge",
											"value": "{{challenge}}"
										},
										{
											"key": "code_challenge_method",
											"value": "S256"
										},
										{
											"key": "{{ssoCookieName}}",
											"value": "{{openamSSOToken}}",
											"disabled": true
										},
										{
											"key": "acr_values",
											"value": "push",
											"disabled": true
										},
										{
											"key": "email",
											"value": "vscheuber@gmail.com",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/authorize (PKCE) FHIR Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sdk = require('postman-collection'),",
											"url = new sdk.Url(postman.getResponseHeader(\"Location\")),",
											"      urlJson = url.toJSON();",
											"query = sdk.QueryParam.parse(url.getQueryString());",
											"",
											"var code = query[0].value;",
											"console.log(\"code: \" + code);",
											"postman.setEnvironmentVariable(\"openamAuthZCode\", code);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function base64URLEncode(words) {",
											"    return CryptoJS.enc.Base64.stringify(words)",
											"        .replace(/\\+/g, '-')",
											"        .replace(/\\//g, '_')",
											"        .replace(/=/g, '');",
											"}",
											"",
											"var verifier = base64URLEncode(CryptoJS.lib.WordArray.random(50));",
											"postman.setEnvironmentVariable(\"verifier\", verifier);",
											"",
											"var challenge = base64URLEncode(CryptoJS.SHA256(verifier));",
											"postman.setEnvironmentVariable(\"challenge\", challenge);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-authZ-{{$timestamp}}"
									},
									{
										"key": "Accept-API-Version",
										"type": "text",
										"value": "resource=1.0"
									},
									{
										"key": "{{ssoCookieName}}",
										"value": "{{openamSSOToken}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/authorize?response_type=code&save_consent=1&decision=Allow&scope=profile email patient/Patient.read patient/*.read patient/Coverage.read patient/ExplanationOfBenefit.read&client_id={{client_id}}&redirect_uri={{host}}&code_challenge={{challenge}}&code_challenge_method=S256",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "code"
										},
										{
											"key": "save_consent",
											"value": "1"
										},
										{
											"key": "decision",
											"value": "Allow"
										},
										{
											"key": "scope",
											"value": "profile email patient/Patient.read patient/*.read patient/Coverage.read patient/ExplanationOfBenefit.read"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										},
										{
											"key": "code_challenge",
											"value": "{{challenge}}"
										},
										{
											"key": "code_challenge_method",
											"value": "S256"
										},
										{
											"key": "4ad7d57003aee4f",
											"value": "{{openamSSOToken}}",
											"disabled": true
										},
										{
											"key": "acr_values",
											"value": "push",
											"disabled": true
										},
										{
											"key": "email",
											"value": "vscheuber@gmail.com",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/access_token (PKCE)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-at_PKCE-{{$timestamp}}"
									},
									{
										"key": "{{ssoCookieName}}",
										"value": "{{openamSSOToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/access_token?grant_type=authorization_code&code={{openamAuthZCode}}&redirect_uri={{host}}&code_verifier={{verifier}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"access_token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "authorization_code"
										},
										{
											"key": "code",
											"value": "{{openamAuthZCode}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										},
										{
											"key": "code_verifier",
											"value": "{{verifier}}"
										},
										{
											"key": "{{ssoCookieName}}",
											"value": "{{openamSSOToken}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "fhir-request-ig",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": true
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-at_PKCE-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "https://ig.mytestrun.com/fhir/volker-dev/Patient?_id=17288",
									"protocol": "https",
									"host": [
										"ig",
										"mytestrun",
										"com"
									],
									"path": [
										"fhir",
										"volker-dev",
										"Patient"
									],
									"query": [
										{
											"key": "_id",
											"value": "17288"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/access_token (ROPC)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "Password1!",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"type": "text",
										"value": "{{transIdPrefix}}-ROPC-{{$timestamp}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "openid profile users",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{openamUser}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{openamPassword}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/access_token",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"access_token"
									]
								}
							},
							"response": []
						},
						{
							"name": "/access_token (Refresh)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.access_token) {",
											"    postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"}",
											"if (jsonData.refresh_token) {",
											"    postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"}",
											"if (jsonData.id_token) {",
											"    postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-at_refresh-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/access_token?grant_type=refresh_token&refresh_token={{openamRefreshToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"access_token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "refresh_token"
										},
										{
											"key": "refresh_token",
											"value": "{{openamRefreshToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/access_token (Client Creds)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "ig_agent",
											"type": "string"
										},
										{
											"key": "username",
											"value": "ig_agent",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "scope",
											"value": "deviceToken",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/access_token",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"access_token"
									]
								}
							},
							"response": []
						},
						{
							"name": "/access_token (JWT bearer RFC7523)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
											"type": "text"
										},
										{
											"key": "assertion",
											"value": "eyJ0eXAiOiJKV1QiLCJraWQiOiJmS2VIUkpTbW5PZWVkbHc3d0JjU0JDRmpDM0k9IiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIwMzE3MmQ4My0yY2U2LTRjOTYtYjdlYi1mNjI1MjQxYWIyZTciLCJjdHMiOiJPQVVUSDJfR1JBTlRfU0VUIiwiYXV0aF9sZXZlbCI6MCwiYXVkaXRUcmFja2luZ0lkIjoiNzUzY2Y5MzUtMzllMS00MjhhLTk3ZDgtMWE5ODE5YzVhM2Y3LTQzMzgiLCJpc3MiOiJodHRwczovL29wZW5hbS12c2MuZm9yZ2VibG9ja3MuY29tOjQ0My9hbS9vYXV0aDIvYWxwaGEiLCJ0b2tlbk5hbWUiOiJhY2Nlc3NfdG9rZW4iLCJ0b2tlbl90eXBlIjoiQmVhcmVyIiwiYXV0aEdyYW50SWQiOiJQQU9PUTNteEprT0hxcHdRdTZBRkljNTNaVWMuTEhkbFhzRi1WeDJneDlUaW9iTnIybzhCMWZrIiwiYXVkIjpbInBvc3RtYW4iLCJodHRwczovL2lkcDM3Lm15dGVzdHJ1bi5jb206NDQzL29wZW5hbS9vYXV0aDIvYWNjZXNzX3Rva2VuIl0sIm5iZiI6MTYxNDYzNzYwOCwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInNjb3BlIjpbIm9ucHJlbSIsIm9wZW5pZCIsInByb2ZpbGUiLCJlbWFpbCJdLCJhdXRoX3RpbWUiOjE2MTQ2Mzc1ODEsInJlYWxtIjoiL2FscGhhIiwiZXhwIjoxNjE0NjQxMjA4LCJpYXQiOjE2MTQ2Mzc2MDgsImV4cGlyZXNfaW4iOjM2MDAsImp0aSI6IlBBT09RM214SmtPSHFwd1F1NkFGSWM1M1pVYy5nVHh6amdpUWFhSVhvSmVXQ1lHQ21TWW1nUHMiLCJ1aWQiOiJ2c2NoZXViZXJAZ21haWwuY29tIn0.Djz04xETygU7zmx3APKDFnJlSzyJc6XZm4RzrdqA_FT2sjbCWUVEcaX5-XO6r8x1FDGPh49V95rCyFYzUkUSKJ77u_SjcL8fBrEB7dnC0CRFltCNdoVfiJQi-P0Y4eXInP-gY4cU6ZG_z_au7_Px0-Y8syhj6n--xotjSN2cMUVd7mR-l-BWFpLKstqze8rH_lZmLod9xdWbJjTdIZd_iNoDcKqvlInGYGDMUNDKOdCp9IAxuX10wPdcV8InHxVdYZcqlYjyUlY1hPD8zELTsSyWpA_-qa1KMyuOVBDDWqYESEPi4v_9_r3LPZqWhHZCVWKtrTXs09pTOaALJMHj6Q",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "profile",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/access_token",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"access_token"
									]
								}
							},
							"response": []
						},
						{
							"name": "/authorize (implicit)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//var jsonData = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"//postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"//postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/authorize?response_type=token&scope=profile&client_id={{client_id}}&redirect_uri={{host}}&nonce=1234&decision=Allow&csrf={{openamSSOToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "token"
										},
										{
											"key": "scope",
											"value": "profile"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										},
										{
											"key": "client_assertion_type",
											"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
											"disabled": true
										},
										{
											"key": "client_assertion",
											"value": "{{openamSSOTokenJWT}}",
											"disabled": true
										},
										{
											"key": "nonce",
											"value": "1234"
										},
										{
											"key": "decision",
											"value": "Allow"
										},
										{
											"key": "csrf",
											"value": "{{openamSSOToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/authorize (implicit, jwt)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//var jsonData = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"//postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"//postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/authorize?response_type=token id_token&scope=profile openid&client_id=principal&redirect_uri={{host}}&nonce=1234&decision=Allow&csrf={{openamSSOToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "token id_token"
										},
										{
											"key": "scope",
											"value": "profile openid"
										},
										{
											"key": "client_id",
											"value": "principal"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										},
										{
											"key": "client_assertion_type",
											"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
											"disabled": true
										},
										{
											"key": "client_assertion",
											"value": "{{openamSSOTokenJWT}}",
											"disabled": true
										},
										{
											"key": "nonce",
											"value": "1234"
										},
										{
											"key": "decision",
											"value": "Allow"
										},
										{
											"key": "csrf",
											"value": "{{openamSSOToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SAML Assertion (IDP)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var xml = cheerio.load(responseBody, {",
											"  normalizeWhitespace: true,",
											"  xmlMode: true,",
											"  decodeEntities: true",
											"});",
											"var samlResponseB64 = xml(\"input[name=SAMLResponse]\").attr(\"value\");",
											"console.log(\"response: \" + samlResponseB64);",
											"var samlResponse = atob(samlResponseB64);",
											"//console.log(\"response: \" + samlResponse);",
											"",
											"var xml2 = cheerio.load(samlResponse, {",
											"  normalizeWhitespace: false,",
											"  xmlMode: true,",
											"  decodeEntities: false",
											"});",
											"var samlAssertion = xml2(\"saml\\\\:Assertion\").toString();",
											"//console.log(\"samlAssertion: \" + samlAssertion);",
											"var samlAssertionB64 = btoa(samlAssertion);",
											"var samlAssertionB64URL = encodeURIComponent(samlAssertionB64);",
											"//console.log(\"samlAssertionB64URL: \" + samlAssertionB64URL);",
											"postman.setEnvironmentVariable(\"samlResponse\", samlResponse);",
											"postman.setEnvironmentVariable(\"samlResponseB64\", samlResponseB64);",
											"postman.setEnvironmentVariable(\"samlAssertion\", samlAssertion);",
											"postman.setEnvironmentVariable(\"samlAssertionB64\", samlAssertionB64);",
											"postman.setEnvironmentVariable(\"samlAssertionB64URL\", samlAssertionB64URL);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/idpssoinit?spEntityID=https%3A%2F%2Fdirectv-sp.mytest.run%3A443%2Fopenam&metaAlias=/idp",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"idpssoinit"
									],
									"query": [
										{
											"key": "spEntityID",
											"value": "https%3A%2F%2Fdirectv-sp.mytest.run%3A443%2Fopenam"
										},
										{
											"key": "metaAlias",
											"value": "/idp"
										},
										{
											"key": "binding",
											"value": "HTTP-Artifact",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "OAuth2 access_token SAML (SP) -> rfc7522",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"type": "text",
										"value": "{{transIdPrefix}}-ROPC-{{$timestamp}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/access_token?grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer&scope=profile&client_id={{client_id2}}&client_secret={{client_secret2}}&redirect_uri={{host}}&assertion={{samlAssertionB64URL}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"access_token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer"
										},
										{
											"key": "scope",
											"value": "profile"
										},
										{
											"key": "client_id",
											"value": "{{client_id2}}"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret2}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										},
										{
											"key": "assertion",
											"value": "{{samlAssertionB64URL}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "OAuth2 access_token SAML (SP)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "X-ForgeRock-TransactionId",
												"type": "text",
												"value": "{{transIdPrefix}}-ROPC-{{$timestamp}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{host-sp}}/openam/oauth2{{realm-sp}}/access_token?grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer&scope=profile&client_id={{client_id-sp}}&client_secret={{client_secret-sp}}&redirect_uri={{host-sp}}&assertion={{samlAssertionB64URL}}",
											"host": [
												"{{host-sp}}"
											],
											"path": [
												"openam",
												"oauth2{{realm-sp}}",
												"access_token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer"
												},
												{
													"key": "scope",
													"value": "profile"
												},
												{
													"key": "client_id",
													"value": "{{client_id-sp}}"
												},
												{
													"key": "client_secret",
													"value": "{{client_secret-sp}}"
												},
												{
													"key": "redirect_uri",
													"value": "{{host-sp}}"
												},
												{
													"key": "assertion",
													"value": "{{samlAssertionB64URL}}"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 01 Feb 2019 23:12:08 GMT"
										},
										{
											"key": "Server",
											"value": "Restlet-Framework/2.3.4"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-Requested-With, Content-Type, Origin, Authorization, Accept, Client-Security-Token, Accept-Encoding"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "POST, GET, OPTIONS, DELETE, PUT"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-store"
										},
										{
											"key": "Accept-Ranges",
											"value": "bytes"
										},
										{
											"key": "Vary",
											"value": "Accept-Charset,Accept-Encoding,Accept-Language,Accept"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"error_description\": \"Internal Server Error\",\n    \"error\": \"server_error\"\n}"
								}
							]
						},
						{
							"name": "OAuth2 access_token SAML Response (SP)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"type": "text",
										"value": "{{transIdPrefix}}-ROPC-{{$timestamp}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{host-sp}}{{am-context}}/oauth2{{realm-sp}}/access_token?grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer&scope=profile&client_id={{client_id-sp}}&client_secret={{client_secret-sp}}&redirect_uri={{host-sp}}&assertion={{samlResponseB64}}",
									"host": [
										"{{host-sp}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm-sp}}",
										"access_token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer"
										},
										{
											"key": "scope",
											"value": "profile"
										},
										{
											"key": "client_id",
											"value": "{{client_id-sp}}"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret-sp}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host-sp}}"
										},
										{
											"key": "assertion",
											"value": "{{samlResponseB64}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/access_token (SAML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function base64URLEncode(str) {",
											"    //console.log(`str: ${str}`);",
											"    ",
											"    var words = CryptoJS.enc.Utf8.parse(str);",
											"    //console.log(`raw: ${words}`);",
											"    ",
											"    var b64 = CryptoJS.enc.Base64.stringify(words);",
											"    //console.log(`b64: ${b64}`);",
											"    ",
											"    var b64url = b64",
											"        .replace(/\\+/g, '-')",
											"        .replace(/\\//g, '_')",
											"        .replace(/=/g, '');",
											"    //console.log(`b64url: ${b64url}`);",
											"    return b64url;",
											"}",
											"",
											"var assertion = base64URLEncode(pm.environment.get(\"samlAssertionRaw\"));",
											"postman.setEnvironmentVariable(\"samlAssertionB64URL\", assertion);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2/access_token?grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer&assertion={{samlAssertionB64URL}}&redirect_uri={{host}}&scope=profile%20openid&client_id=saml",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2",
										"access_token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-bearer"
										},
										{
											"key": "assertion",
											"value": "{{samlAssertionB64URL}}"
										},
										{
											"key": "redirect_uri",
											"value": "{{host}}"
										},
										{
											"key": "scope",
											"value": "profile%20openid"
										},
										{
											"key": "client_id",
											"value": "saml"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/introspect (standard)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/introspect?token={{openamAccessToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"introspect"
									],
									"query": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/introspect (standard) IDM ADMIN TOKEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{admin_client_id}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/introspect?token={{openamAccessToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"introspect"
									],
									"query": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/introspect (standard) IDM User Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{enduser_client_id}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/introspect?token={{openamAccessToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"introspect"
									],
									"query": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/tokeninfo (proprietary)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/tokeninfo?access_token={{openamAccessToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"tokeninfo"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{openamAccessToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/token (query)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamAccessToken\", jsonData.access_token);",
											"postman.setEnvironmentVariable(\"openamRefreshToken\", jsonData.refresh_token);",
											"postman.setEnvironmentVariable(\"openamIdToken\", jsonData.id_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic Y2RzOmNkcw==",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/frrest/oauth2/token?_queryId=userName={{openamUser}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"frrest",
										"oauth2",
										"token"
									],
									"query": [
										{
											"key": "_queryId",
											"value": "userName={{openamUser}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/userinfo (OIDC)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/userinfo",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"userinfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "/idtokeninfo (OIDC)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/idtokeninfo?client_id={{client_id}}&client_secret={{client_secret}}&id_token={{openamIdToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"idtokeninfo"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{client_id}}"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}"
										},
										{
											"key": "id_token",
											"value": "{{openamIdToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/idtokeninfo (OIDC) IDM User Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2{{realm}}/idtokeninfo?client_id={{enduser_client_id}}&id_token={{openamIdToken}}",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2{{realm}}",
										"idtokeninfo"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{enduser_client_id}}"
										},
										{
											"key": "id_token",
											"value": "{{openamIdToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Wellknown Endpoint",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "X-ForgeRock-TransactionId",
										"value": "{{transIdPrefix}}-tokeninfo-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/oauth2/realms{{realm}}/.well-known/openid-configuration",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"oauth2",
										"realms{{realm}}",
										".well-known",
										"openid-configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "/applications",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=1.1"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/users/{{openamUser}}/oauth2/applications?_queryFilter=true",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"users",
										"{{openamUser}}",
										"oauth2",
										"applications"
									],
									"query": [
										{
											"key": "_queryFilter",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/sessions",
					"item": [
						{
							"name": "Query Sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"sessionHandle\", jsonData.result[0].sessionHandle);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=2.1",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/sessions?_queryFilter=username%20eq%20%22volker%22%20and%20%20realm%20eq%20%22%2Fcc%22",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"sessions"
									],
									"query": [
										{
											"key": "_queryFilter",
											"value": "username%20eq%20%22volker%22%20and%20%20realm%20eq%20%22%2Fcc%22"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kill Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamSSOToken\", jsonData.tokenId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=3.1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sessionHandles\": [\n    \"shandle:ng111uHiKPUhEqt0NZ1GWRD_pvQ.*AAJTSQACMDEAAlNLABxNbndqb0xuSWE5aXB3Y1IrOE9lYzFkbnlFTkU9AAR0eXBlAANDVFMAAlMxAAA.*\"\n  ]\n}"
								},
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/sessions/?_action=logoutByHandle",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"sessions",
										""
									],
									"query": [
										{
											"key": "_action",
											"value": "logoutByHandle"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Active Sessions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=2.0"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/sessions?_queryFilter=realm eq \"/\"",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"sessions"
									],
									"query": [
										{
											"key": "_queryFilter",
											"value": "realm eq \"/\""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Sessioninfo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=3.1"
									},
									{
										"key": "{{ssoCookieName}}",
										"value": "{{openamSSOToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}{{am-context}}/json/sessions/?_action=getSessionInfo",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json",
										"sessions",
										""
									],
									"query": [
										{
											"key": "_action",
											"value": "getSessionInfo"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Session Properties",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=3.1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}{{am-context}}/json/sessions/?_action=getSessionProperties&_fields=UOPClassID",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json",
										"sessions",
										""
									],
									"query": [
										{
											"key": "_action",
											"value": "getSessionProperties"
										},
										{
											"key": "_fields",
											"value": "UOPClassID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamSSOToken\", jsonData.tokenId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=3.1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/sessions/?_action=logout",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"sessions",
										""
									],
									"query": [
										{
											"key": "_action",
											"value": "logout"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamSSOToken\", jsonData.tokenId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=3.1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/sessions/?_action=validate",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"sessions",
										""
									],
									"query": [
										{
											"key": "_action",
											"value": "validate"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/applications",
					"item": [
						{
							"name": "Create Policy Set",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept-API-Version",
										"value": "protocol=1.0,resource=2.0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"myPolicySet\",\n    \"displayName\": \"My Policy Set\",\n    \"description\": \"My Policy Set\",\n    \"resourceTypeUuids\": [\n        \"76656a38-5f8e-401b-83aa-4ccb74ce88d2\"\n    ],\n    \"realm\": \"/alpha\",\n    \"applicationType\": \"iPlanetAMWebAgentService\",\n    \"conditions\": [\n        \"AMIdentityMembership\",\n        \"AND\",\n        \"AuthLevel\",\n        \"AuthScheme\",\n        \"AuthenticateToRealm\",\n        \"AuthenticateToService\",\n        \"IPv4\",\n        \"IPv6\",\n        \"LDAPFilter\",\n        \"LEAuthLevel\",\n        \"NOT\",\n        \"OAuth2Scope\",\n        \"OR\",\n        \"Policy\",\n        \"ResourceEnvIP\",\n        \"Script\",\n        \"Session\",\n        \"SessionProperty\",\n        \"SimpleTime\",\n        \"Transaction\"\n    ],\n    \"subjects\": [\n        \"AND\",\n        \"AuthenticatedUsers\",\n        \"Identity\",\n        \"JwtClaim\",\n        \"NONE\",\n        \"NOT\",\n        \"OR\",\n        \"Policy\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/applications/?_action=create",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"applications",
										""
									],
									"query": [
										{
											"key": "_action",
											"value": "create"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/policies",
					"item": [
						{
							"name": "Policy Decision (single resource)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-API-Version",
										"value": "protocol=2.1,resource=1.0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resources\": [\n        \"http://devvm0016.qidc.dev.emergis:8080\"\n    ],\n    \"application\": \"PEP\",\n    \"subject\": {\n        \"ssoToken\": \"gdPMNn7REGdZrjSbQASnzMGHtuE.*AAJTSQACMDIAAlNLABx6Rml4K0RtY1JwblIvVTN0WW5ER2RmU0ZzL1U9AAR0eXBlAANDVFMAAlMxAAIwMQ..*\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/policies?_action=evaluate",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"policies"
									],
									"query": [
										{
											"key": "_action",
											"value": "evaluate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Policy Decision (multiple resources)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"type": "text",
										"value": "protocol=2.1,resource=1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resources\": [\n        \"/product1/id\",\n        \"/product1/name\",\n        \"/product1/description\",\n        \"/product1/specs\"\n    ],\n    \"application\": \"SiteInspection\",\n    \"subject\": {\n        \"ssoToken\": \"{{openamSSOToken}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/openam/json{{realm}}/policies?_action=evaluate",
									"host": [
										"{{host}}"
									],
									"path": [
										"openam",
										"json{{realm}}",
										"policies"
									],
									"query": [
										{
											"key": "_action",
											"value": "evaluate"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/global-config",
					"item": [
						{
							"name": "/secrets",
							"item": [
								{
									"name": "/realms",
									"item": [
										{
											"name": "List all realms",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-Requested-With",
														"value": "Postman",
														"type": "text"
													},
													{
														"key": "Accept-API-Version",
														"value": "resource=1.0",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{host}}{{am-context}}/json{{realm}}/global-config/realms?_queryFilter=true",
													"host": [
														"{{host}}{{am-context}}"
													],
													"path": [
														"json{{realm}}",
														"global-config",
														"realms"
													],
													"query": [
														{
															"key": "_queryFilter",
															"value": "true"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "/stores",
									"item": [
										{
											"name": "/KeyStoreSecretStore",
											"item": [
												{
													"name": "List all key stores",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{host}}{{am-context}}/json{{realm}}/global-config/secrets/stores/KeyStoreSecretStore?_queryFilter=true",
															"host": [
																"{{host}}{{am-context}}"
															],
															"path": [
																"json{{realm}}",
																"global-config",
																"secrets",
																"stores",
																"KeyStoreSecretStore"
															],
															"query": [
																{
																	"key": "_queryFilter",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Get default-keystore",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{host}}{{am-context}}/json{{realm}}/global-config/secrets/stores/KeyStoreSecretStore/default-keystore",
															"host": [
																"{{host}}{{am-context}}"
															],
															"path": [
																"json{{realm}}",
																"global-config",
																"secrets",
																"stores",
																"KeyStoreSecretStore",
																"default-keystore"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get default-keystore mappings",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{host}}/openam/json{{realm}}/global-config/secrets/stores/KeyStoreSecretStore/default-keystore/mappings?_queryFilter=true",
															"host": [
																"{{host}}"
															],
															"path": [
																"openam",
																"json{{realm}}",
																"global-config",
																"secrets",
																"stores",
																"KeyStoreSecretStore",
																"default-keystore",
																"mappings"
															],
															"query": [
																{
																	"key": "_queryFilter",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "/services",
							"item": [
								{
									"name": "/monitoring",
									"item": [
										{
											"name": "/prometheus",
											"item": [
												{
													"name": "Get Prometheus Configs",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "{{ssoCookieName}}",
																"value": "{{openamSSOToken}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{host}}{{am-context}}/json/global-config/services/monitoring/prometheus?_prettyPrint=true&_queryFilter=true",
															"host": [
																"{{host}}{{am-context}}"
															],
															"path": [
																"json",
																"global-config",
																"services",
																"monitoring",
																"prometheus"
															],
															"query": [
																{
																	"key": "_prettyPrint",
																	"value": "true"
																},
																{
																	"key": "_queryFilter",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "/uma",
									"item": [
										{
											"name": "Delete UMA Service",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "accept",
														"value": "application/json"
													},
													{
														"key": "X-OpenAM-Username",
														"value": "{{openamUser}}",
														"disabled": true
													},
													{
														"key": "X-OpenAM-Password",
														"value": "{{openamPassword}}",
														"disabled": true
													},
													{
														"key": "Accept-API-Version",
														"value": "resource=1.0",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}/openam/json/realms/root/realm-config/services/uma",
													"host": [
														"{{host}}"
													],
													"path": [
														"openam",
														"json",
														"realms",
														"root",
														"realm-config",
														"services",
														"uma"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "/realm-config",
					"item": [
						{
							"name": "/authentication",
							"item": [
								{
									"name": "/authenticationtrees",
									"item": [
										{
											"name": "/nodes",
											"item": [
												{
													"name": "/PasswordCollectorNode",
													"item": [
														{
															"name": "List PasswordCollectorNode instances",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.1",
																		"disabled": true
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/PasswordCollectorNode?_queryFilter=true",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"PasswordCollectorNode"
																	],
																	"query": [
																		{
																			"key": "_queryFilter",
																			"value": "true"
																		}
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "/ScriptedDecisionNode",
													"item": [
														{
															"name": "List ScriptedDecisionNode instances",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.1",
																		"disabled": true
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/ScriptedDecisionNode?_queryFilter=true",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"ScriptedDecisionNode"
																	],
																	"query": [
																		{
																			"key": "_queryFilter",
																			"value": "true"
																		}
																	]
																}
															},
															"response": []
														},
														{
															"name": "Get ScriptedDecisionNode instance",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.1",
																		"disabled": true
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/ScriptedDecisionNode/fec73b9f-6b9e-4dd0-8e49-98091b984080",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"ScriptedDecisionNode",
																		"fec73b9f-6b9e-4dd0-8e49-98091b984080"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete ScriptedDecisionNode instance",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.0"
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/ScriptedDecisionNode/FFF2D1A1-8155-4EAB-8D08-2C2D5BACF061",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"ScriptedDecisionNode",
																		"FFF2D1A1-8155-4EAB-8D08-2C2D5BACF061"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "/PageNode",
													"item": [
														{
															"name": "List PageNode instances",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.1",
																		"disabled": true
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/PageNode?_queryFilter=true",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"PageNode"
																	],
																	"query": [
																		{
																			"key": "_queryFilter",
																			"value": "true"
																		}
																	]
																}
															},
															"response": []
														},
														{
															"name": "Get PageNode instance",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.1",
																		"disabled": true
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/PageNode/1BDF69A9-8147-4384-8A59-947ED5AABC2D",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"PageNode",
																		"1BDF69A9-8147-4384-8A59-947ED5AABC2D"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete PageNode instance",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.0"
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/PageNode/FFF2D1A1-8155-4EAB-8D08-2C2D5BACF061",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"PageNode",
																		"FFF2D1A1-8155-4EAB-8D08-2C2D5BACF061"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "/InnerTreeEvaluatorNode",
													"item": [
														{
															"name": "List InnerTreeEvaluatorNode instances",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.1",
																		"disabled": true
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/InnerTreeEvaluatorNode?_queryFilter=true",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"InnerTreeEvaluatorNode"
																	],
																	"query": [
																		{
																			"key": "_queryFilter",
																			"value": "true"
																		}
																	]
																}
															},
															"response": []
														},
														{
															"name": "Get InnerTreeEvaluatorNode instance",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.1",
																		"disabled": true
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/InnerTreeEvaluatorNode/48E294DB-3E31-4E0F-A458-CF40ACC6338F",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"InnerTreeEvaluatorNode",
																		"48E294DB-3E31-4E0F-A458-CF40ACC6338F"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete InnerTreeEvaluatorNode instance",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept-API-Version",
																		"type": "text",
																		"value": "resource=1.0"
																	}
																],
																"url": {
																	"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes/InnerTreeEvaluatorNode/FFF2D1A1-8155-4EAB-8D08-2C2D5BACF061",
																	"host": [
																		"{{host}}"
																	],
																	"path": [
																		"openam",
																		"json{{realm}}",
																		"realm-config",
																		"authentication",
																		"authenticationtrees",
																		"nodes",
																		"InnerTreeEvaluatorNode",
																		"FFF2D1A1-8155-4EAB-8D08-2C2D5BACF061"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "List all Auth Node Types",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept-API-Version",
																"type": "text",
																"value": "resource=1.0"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/authentication/authenticationtrees/nodes?_action=getAllTypes",
															"host": [
																"{{host}}{{am-context}}"
															],
															"path": [
																"json{{realm}}",
																"realm-config",
																"authentication",
																"authenticationtrees",
																"nodes"
															],
															"query": [
																{
																	"key": "_action",
																	"value": "getAllTypes"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "List all Auth Node Types Descendents",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept-API-Version",
																"type": "text",
																"value": "resource=1.0"
															},
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/nodes?_action=nextdescendents",
															"host": [
																"{{host}}"
															],
															"path": [
																"openam",
																"json{{realm}}",
																"realm-config",
																"authentication",
																"authenticationtrees",
																"nodes"
															],
															"query": [
																{
																	"key": "_action",
																	"value": "nextdescendents"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "/trees",
											"item": [
												{
													"name": "List all trees Copy",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/authentication/authenticationtrees/trees?_queryFilter=true",
															"host": [
																"{{host}}{{am-context}}"
															],
															"path": [
																"json{{realm}}",
																"realm-config",
																"authentication",
																"authenticationtrees",
																"trees"
															],
															"query": [
																{
																	"key": "_queryFilter",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "List all trees Descendents",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept-API-Version",
																"type": "text",
																"value": "resource=1.0"
															},
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{host}}/openam/json{{realm}}/realm-config/authentication/authenticationtrees/trees?_action=nextdescendents",
															"host": [
																"{{host}}"
															],
															"path": [
																"openam",
																"json{{realm}}",
																"realm-config",
																"authentication",
																"authenticationtrees",
																"trees"
															],
															"query": [
																{
																	"key": "_action",
																	"value": "nextdescendents"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete a tree by name",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-ForgeRock-TransactionId",
																"value": "Delete-MFAWithEmailOTP",
																"type": "text"
															},
															{
																"key": "accept-api-version",
																"value": "protocol=2.1,resource=1.0",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/authentication/authenticationtrees/trees/MFAWithEmailOTP",
															"host": [
																"{{host}}{{am-context}}"
															],
															"path": [
																"json{{realm}}",
																"realm-config",
																"authentication",
																"authenticationtrees",
																"trees",
																"MFAWithEmailOTP"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "/modules",
									"item": [
										{
											"name": "/datastore (get module)",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/authentication/modules/datastore/datastore",
													"host": [
														"{{host}}{{am-context}}"
													],
													"path": [
														"json{{realm}}",
														"realm-config",
														"authentication",
														"modules",
														"datastore",
														"datastore"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "/secrets",
							"item": [
								{
									"name": "/stores",
									"item": [
										{
											"name": "/KeyStoreSecretStore",
											"item": [
												{
													"name": "Create keystore",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Requested-With",
																"value": "Postman",
																"type": "text"
															},
															{
																"key": "Accept-API-Version",
																"value": "resource=1.0",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"storePassword\": \"storepass\",\n    \"storetype\": \"JCEKS\",\n    \"file\": \"/opt/forgerock/products/AM/alpha/openam/keystore.jceks\",\n    \"leaseExpiryDuration\": 5,\n    \"keyEntryPassword\": \"entrypass\",\n    \"providerName\": \"SunJCE\"\n}"
														},
														"url": {
															"raw": "{{host}}/openam/json{{realm}}/realm-config/secrets/stores/KeyStoreSecretStore/keystore?_prettyPrint=true",
															"host": [
																"{{host}}"
															],
															"path": [
																"openam",
																"json{{realm}}",
																"realm-config",
																"secrets",
																"stores",
																"KeyStoreSecretStore",
																"keystore"
															],
															"query": [
																{
																	"key": "_prettyPrint",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Create mapping am.applications.agents.remote.consent.request.signing.ES256",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"type": "text",
																"value": "Postman"
															},
															{
																"key": "Accept-API-Version",
																"type": "text",
																"value": "resource=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"secretId\": \"am.applications.agents.remote.consent.request.signing.ES256\",\n    \"aliases\": [\n        \"es256test\"\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/openam/json{{realm}}/realm-config/secrets/stores/KeyStoreSecretStore/keystore/mappings/am.applications.agents.remote.consent.request.signing.ES256?_prettyPrint=true",
															"host": [
																"{{host}}"
															],
															"path": [
																"openam",
																"json{{realm}}",
																"realm-config",
																"secrets",
																"stores",
																"KeyStoreSecretStore",
																"keystore",
																"mappings",
																"am.applications.agents.remote.consent.request.signing.ES256"
															],
															"query": [
																{
																	"key": "_prettyPrint",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Create mapping am.applications.agents.remote.consent.request.signing.ES384",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"type": "text",
																"value": "Postman"
															},
															{
																"key": "Accept-API-Version",
																"type": "text",
																"value": "resource=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"secretId\": \"am.applications.agents.remote.consent.request.signing.ES384\",\n    \"aliases\": [\n        \"es384test\"\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/openam/json{{realm}}/realm-config/secrets/stores/KeyStoreSecretStore/keystore/mappings/am.applications.agents.remote.consent.request.signing.ES384?_prettyPrint=true",
															"host": [
																"{{host}}"
															],
															"path": [
																"openam",
																"json{{realm}}",
																"realm-config",
																"secrets",
																"stores",
																"KeyStoreSecretStore",
																"keystore",
																"mappings",
																"am.applications.agents.remote.consent.request.signing.ES384"
															],
															"query": [
																{
																	"key": "_prettyPrint",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Create mapping am.applications.agents.remote.consent.request.signing.ES384 Copy",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"type": "text",
																"value": "Postman"
															},
															{
																"key": "Accept-API-Version",
																"type": "text",
																"value": "resource=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"secretId\": \"am.applications.agents.remote.consent.request.signing.ES512\",\n    \"aliases\": [\n        \"es512test\"\n    ]\n}"
														},
														"url": {
															"raw": "{{host}}/openam/json{{realm}}/realm-config/secrets/stores/KeyStoreSecretStore/keystore/mappings/am.applications.agents.remote.consent.request.signing.ES512?_prettyPrint=true",
															"host": [
																"{{host}}"
															],
															"path": [
																"openam",
																"json{{realm}}",
																"realm-config",
																"secrets",
																"stores",
																"KeyStoreSecretStore",
																"keystore",
																"mappings",
																"am.applications.agents.remote.consent.request.signing.ES512"
															],
															"query": [
																{
																	"key": "_prettyPrint",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "List all key stores",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host}}/openam/json{{realm}}/realm-config/secrets/stores/KeyStoreSecretStore?_queryFilter=true",
													"host": [
														"{{host}}"
													],
													"path": [
														"openam",
														"json{{realm}}",
														"realm-config",
														"secrets",
														"stores",
														"KeyStoreSecretStore"
													],
													"query": [
														{
															"key": "_queryFilter",
															"value": "true"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get key store schema",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-API-Version",
														"value": "resource=1.0",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{host}}/openam/json{{realm}}/realm-config/secrets/stores/KeyStoreSecretStore?_queryFilter=true&_action=schema",
													"host": [
														"{{host}}"
													],
													"path": [
														"openam",
														"json{{realm}}",
														"realm-config",
														"secrets",
														"stores",
														"KeyStoreSecretStore"
													],
													"query": [
														{
															"key": "_queryFilter",
															"value": "true"
														},
														{
															"key": "_action",
															"value": "schema"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "/services",
							"item": [
								{
									"name": "/uma",
									"item": [
										{
											"name": "Delete UMA Service",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "accept",
														"value": "application/json"
													},
													{
														"key": "X-OpenAM-Username",
														"value": "{{openamUser}}",
														"disabled": true
													},
													{
														"key": "X-OpenAM-Password",
														"value": "{{openamPassword}}",
														"disabled": true
													},
													{
														"key": "Accept-API-Version",
														"value": "resource=1.0",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}{{am-context}}/json/realm-config/services/uma",
													"host": [
														"{{host}}{{am-context}}"
													],
													"path": [
														"json",
														"realm-config",
														"services",
														"uma"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "/selfServiceTrees",
									"item": [
										{
											"name": "List Self-Service Trees Mappings",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/services/selfServiceTrees?_prettyPrint=true",
													"host": [
														"{{host}}{{am-context}}"
													],
													"path": [
														"json{{realm}}",
														"realm-config",
														"services",
														"selfServiceTrees"
													],
													"query": [
														{
															"key": "_prettyPrint",
															"value": "true"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "List SocialIdentityProviders",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-API-Version",
												"value": "protocol=1.0,resource=1.0",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/services/SocialIdentityProviders?_action=nextdescendents&_prettyPrint=true",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"realm-config",
												"services",
												"SocialIdentityProviders"
											],
											"query": [
												{
													"key": "_action",
													"value": "nextdescendents"
												},
												{
													"key": "_prettyPrint",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/agents",
							"item": [
								{
									"name": "/OAuth2Client",
									"item": [
										{
											"name": "List all oauth2 clients",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/agents/OAuth2Client?_prettyPrint=true&_queryFilter=true",
													"host": [
														"{{host}}{{am-context}}"
													],
													"path": [
														"json{{realm}}",
														"realm-config",
														"agents",
														"OAuth2Client"
													],
													"query": [
														{
															"key": "_prettyPrint",
															"value": "true"
														},
														{
															"key": "_queryFilter",
															"value": "true"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get oauth2 client by ID",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/agents/OAuth2Client/postman?_prettyPrint=true",
													"host": [
														"{{host}}{{am-context}}"
													],
													"path": [
														"json{{realm}}",
														"realm-config",
														"agents",
														"OAuth2Client",
														"postman"
													],
													"query": [
														{
															"key": "_prettyPrint",
															"value": "true"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "/federation",
							"item": [
								{
									"name": "/circlesoftrust",
									"item": [
										{
											"name": "List circles of trust",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/federation/circlesoftrust?_prettyPrint=true&_queryFilter=true",
													"host": [
														"{{host}}{{am-context}}"
													],
													"path": [
														"json{{realm}}",
														"realm-config",
														"federation",
														"circlesoftrust"
													],
													"query": [
														{
															"key": "_prettyPrint",
															"value": "true"
														},
														{
															"key": "_queryFilter",
															"value": "true"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "/entityproviders",
									"item": [
										{
											"name": "/saml2",
											"item": [
												{
													"name": "List SAML2 entity providers",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/federation/entityproviders/saml2?_prettyPrint=true&_queryFilter=true",
															"host": [
																"{{host}}{{am-context}}"
															],
															"path": [
																"json{{realm}}",
																"realm-config",
																"federation",
																"entityproviders",
																"saml2"
															],
															"query": [
																{
																	"key": "_prettyPrint",
																	"value": "true"
																},
																{
																	"key": "_queryFilter",
																	"value": "true"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "/saml2",
							"item": [
								{
									"name": "/hosted",
									"item": [
										{
											"name": "List hosted entity provider by ID",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/saml2/hosted/aHR0cHM6Ly9vcGVuYW0tdm9sa2VyLWRldi5mb3JnZWJsb2Nrcy5jb20vYW0?_prettyPrint=true",
													"host": [
														"{{host}}{{am-context}}"
													],
													"path": [
														"json{{realm}}",
														"realm-config",
														"saml2",
														"hosted",
														"aHR0cHM6Ly9vcGVuYW0tdm9sa2VyLWRldi5mb3JnZWJsb2Nrcy5jb20vYW0"
													],
													"query": [
														{
															"key": "_prettyPrint",
															"value": "true"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "List entity providers",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}{{am-context}}/json{{realm}}/realm-config/saml2?_prettyPrint=true&_queryFilter=true",
											"host": [
												"{{host}}{{am-context}}"
											],
											"path": [
												"json{{realm}}",
												"realm-config",
												"saml2"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_queryFilter",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "/scripts",
					"item": [
						{
							"name": "List all scripts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-API-Version",
										"value": "resource=1.1",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/scripts?_queryFilter=true",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"scripts"
									],
									"query": [
										{
											"key": "_queryFilter",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find script",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-API-Version",
										"type": "text",
										"value": "resource=1.1"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/scripts?_queryFilter=context eq 'AUTHENTICATION_TREE_DECISION_NODE'",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"scripts"
									],
									"query": [
										{
											"key": "_queryFilter",
											"value": "context eq 'AUTHENTICATION_TREE_DECISION_NODE'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get script",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-API-Version",
										"type": "text",
										"value": "resource=1.1"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/scripts/1c639bbc-bc8f-45e3-970c-5375df1fec7b",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"scripts",
										"1c639bbc-bc8f-45e3-970c-5375df1fec7b"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete script",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept-API-Version",
										"type": "text",
										"value": "resource=1.1"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/scripts/7471935b-efc4-49c7-b493-7a5e693fccfa",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"scripts",
										"7471935b-efc4-49c7-b493-7a5e693fccfa"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/users",
					"item": [
						{
							"name": "groups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=1.0",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/openam/json{{realm}}/users/{{openamUser}}/groups?_prettyPrint=true&_queryFilter=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"openam",
										"json{{realm}}",
										"users",
										"{{openamUser}}",
										"groups"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										},
										{
											"key": "_queryFilter",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://openam-volker-dev.forgeblocks.com/am/json/realms/root/realms/alpha/users?_queryFilter=true&_pageSize=100&_fields=cn,mail,username,inetUserStatus",
									"protocol": "https",
									"host": [
										"openam-volker-dev",
										"forgeblocks",
										"com"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"alpha",
										"users"
									],
									"query": [
										{
											"key": "_queryFilter",
											"value": "true"
										},
										{
											"key": "_pageSize",
											"value": "100"
										},
										{
											"key": "_fields",
											"value": "cn,mail,username,inetUserStatus"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://openam-volker-dev.forgeblocks.com/am/json/realms/root/realms/alpha/users/4cdc765a-e1d9-49ac-bd83-693d462bd842",
									"protocol": "https",
									"host": [
										"openam-volker-dev",
										"forgeblocks",
										"com"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"alpha",
										"users",
										"4cdc765a-e1d9-49ac-bd83-693d462bd842"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/serverinfo",
					"item": [
						{
							"name": "Get AM Version",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=1.0"
									}
								],
								"url": {
									"raw": "{{host}}{{am-context}}/json/serverinfo/version?_prettyPrint=true",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json",
										"serverinfo",
										"version"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "ForgeRock Access Management REST APIs (applies to both on-prem and PaaS)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "/openidm",
			"item": [
				{
					"name": "OIDC User Login (AM integration)",
					"item": [
						{
							"name": "1 - Initiate Login (IDM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"idmRedirect\", jsonData.redirect);",
											"postman.setEnvironmentVariable(\"idmDataStoreToken\", jsonData.token);",
											"",
											"var sdk = require('postman-collection'),",
											"    jsonUrl = new sdk.Url(jsonData.redirect).toJSON();",
											"",
											"// console.log(JSON.stringify(jsonUrl));",
											"",
											"var nonce,state;",
											"for (var i = 0; i < jsonUrl.query.length; i++){",
											"    if (jsonUrl.query[i].key == 'nonce') {",
											"        nonce = jsonUrl.query[i].value",
											"    }",
											"    else if (jsonUrl.query[i].key == 'state') {",
											"        state = jsonUrl.query[i].value",
											"    }",
											"}",
											"",
											"console.log(\"nonce=\"+nonce);",
											"console.log('state='+state);",
											"",
											"postman.setEnvironmentVariable(\"idmNonce\", nonce);",
											"postman.setEnvironmentVariable(\"idmState\", state);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-OpenIDM-Username",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-NoSession",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"provider\":\"OPENAM\",\n   \"landingPage\":\"http://idm.example.net:8081/#login/&oauthReturn=true&provider=OPENAM&gotoURL=%23\"\n}"
								},
								"url": {
									"raw": "{{host}}/openidm/identityProviders?_action=getAuthRedirect",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"identityProviders"
									],
									"query": [
										{
											"key": "_action",
											"value": "getAuthRedirect"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Authenticate User (AM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"openamSSOToken\", jsonData.tokenId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-OpenAM-Username",
										"value": "{{openamUser}}"
									},
									{
										"key": "X-OpenAM-Password",
										"value": "{{openamPassword}}"
									},
									{
										"key": "Accept-API-Version",
										"value": "resource=1.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}{{am-context}}/json{{realm}}/authenticate",
									"host": [
										"{{host}}{{am-context}}"
									],
									"path": [
										"json{{realm}}",
										"authenticate"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Get Authorization Code (AM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sdk = require('postman-collection'),",
											"url = new sdk.Url(postman.getResponseHeader(\"Location\")),",
											"      urlJson = url.toJSON();",
											"query = sdk.QueryParam.parse(url.getQueryString());",
											"",
											"console.log(urlJson);",
											"console.log(query);",
											"console.log(query[0].value);",
											"postman.setEnvironmentVariable(\"openamAuthZCode\", query[0].value);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{idmRedirect}}",
									"host": [
										"{{idmRedirect}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4 - Handle Post Authentication (IDM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"idmDataStoreToken\", jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-OpenIDM-Username",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-NoSession",
										"value": "true"
									},
									{
										"key": "X-OpenIDM-DataStoreToken",
										"value": "{{idmDataStoreToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"code\":[\"{{openamAuthZCode}}\"],\n   \"scope\":[\"openid\"],\n   \"iss\":[\"{{host}}/openam/oauth2\"],\n   \"state\":[\"{{idmState}}\"],\n   \"client_id\":[\"openidm\"]\n}"
								},
								"url": {
									"raw": "{{host}}/openidm/identityProviders?_action=handlePostAuth",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"identityProviders"
									],
									"query": [
										{
											"key": "_action",
											"value": "handlePostAuth"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Password Reset",
					"item": [
						{
							"name": "Password Reset Step 1 - Initiate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"pwdResetToken\", jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "anonymous",
										"type": "text"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "anonymous",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\" : {}\n}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/reset?_action=submitRequirements",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"reset"
									],
									"query": [
										{
											"key": "_action",
											"value": "submitRequirements"
										}
									]
								},
								"description": "Initial Requirements for Password Reset"
							},
							"response": []
						},
						{
							"name": "Password Reset Step 2 - Find User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"pwdResetToken\", jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"type": "text",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-Password",
										"type": "text",
										"value": "anonymous"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\"queryFilter\": \"userName eq \\\"asingh\\\"\"\n\t},\n    \"token\": \"{{pwdResetToken}}\"\n}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/reset?_action=submitRequirements",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"reset"
									],
									"query": [
										{
											"key": "_action",
											"value": "submitRequirements"
										}
									]
								},
								"description": "QueryFilter phase of Password Reset Process"
							},
							"response": []
						},
						{
							"name": "Password Reset Step 3 - Answer Security Questions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"pwdResetToken\", jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"type": "text",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-Password",
										"type": "text",
										"value": "anonymous"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\" : {\n\t\t\"answer1\": \"mom\"\n\t},\n\t\"token\": \"{{pwdResetToken}}\"\n}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/reset?_action=submitRequirements",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"reset"
									],
									"query": [
										{
											"key": "_action",
											"value": "submitRequirements"
										}
									]
								},
								"description": "KBA Answer Submission Phase of Password Reset process"
							},
							"response": []
						},
						{
							"name": "Password Reset Step 4 - Set New Password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-OpenIDM-Username",
										"value": "anonymous",
										"type": "text"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "anonymous",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\" : {\n\t\t\"password\": \"FJKFHKJDRJYD4627612789%$\"\n\t},\n\t\"token\": \"{{pwdResetToken}}\"\n}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/reset?_action=submitRequirements",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"reset"
									],
									"query": [
										{
											"key": "_action",
											"value": "submitRequirements"
										}
									]
								},
								"description": "Password submission phase for self service password reset"
							},
							"response": []
						}
					]
				},
				{
					"name": "Progressive Profile Completion",
					"item": [
						{
							"name": "1 - Authenticate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}"
									},
									{
										"key": "X-OpenIDM-NoSession",
										"value": "false"
									},
									{
										"key": "X-OpenIDM-RunAs",
										"value": "aadams",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}/openidm/authentication?_action=login",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"authentication"
									],
									"query": [
										{
											"key": "_action",
											"value": "login"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Get Profile",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}"
									},
									{
										"key": "X-OpenIDM-RunAs",
										"value": "vscheuber",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/openidm/selfservice/profile",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Submit Profile Requirements",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}"
									},
									{
										"key": "X-OpenIDM-RunAs",
										"value": "vscheuber",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\": \"eyJ0eXAiOiJKV1QiLCJjdHkiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.ZXlKMGVYQWlPaUpLVjFRaUxDSmxibU1pT2lKQk1USTRRMEpETFVoVE1qVTJJaXdpWVd4bklqb2lVbE5CTVY4MUluMC5mQkxZZzJnQ0gzWUwyRjNhVFlyRXEteWpYbUIyY2txaWpuZ09qeTNUTEFDSkxKb3JnMzFZUGp2R0NDU19XWUJ0djZRRDJOS0owT0Y2ajQ4T3FrVHNQdXZrWmtFaTBublVOVlRicFI4MFUwczkzQml0Um15dmVNcFYxNWo0Q0ZOWWpPaTR6NG5JOGdpaUtPdWNOM0hOeUhteXNUMHVpN3RMZDlVcHRKR0RvbFJrRWhSeTNvUHkyT3dRT01Xd05NUmg1OWNHZ0ZXa0sxWW5Oci1PZEtKZElfdWlROVRMOS1hQmxIQmdfQU92T2prb2FsVWJKVjM3d1AtYXk1YlFaTEVjWVYyN3ItNkg3VTZFQU9DQ2k4RjFKM2w0NlMwXzFtRkJVSloxY1VtZzAzQm9sZkZzUEhaYUU2NzcxWW9nMllDOThLbEZvLVl2REtoVVJVLUdkTzVTRUEuMHR5RERGSTk1enhtblRZNmNySF9yUS5aSktvcEhXbDVXbDhhc1NwWGNrMVFDVmI4MUZDWkw3X3J4eU9zc1VJUFg0MWg1UXlscjZ3Q3pJeEVqQ2llY2RRYmpMMWxZUl9LYVJ6SU03M3ZiZVUwc0hOY1JPODhONjZXQkdHNUljSndweEkxNjB6amFfQmltWXpOZjdhcmJsQklBWVhxN2REQmlIRzdmeWZqcWk5UFBZYUdCeGU5R2lOYWFXbTZrSjRuNVEubXdpaUE5V0ZhTUV0NXNvUzJvUkhPUQ.idZPOtVWrzkWxR_-r3poqBszpQSntL5_39yjRtfU46U\",\n\t\"input\":{\n\t\t\"attributes\":{\n\t\t\t\"description\":\"I am super tired!\"\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/profile?_action=submitRequirements",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"profile"
									],
									"query": [
										{
											"key": "_action",
											"value": "submitRequirements"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User Metadata",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}"
									}
								],
								"url": {
									"raw": "{{host}}/openidm/managed/user?_queryFilter=userName+eq+'dcrane'&_fields=*,/_meta/*",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"managed",
										"user"
									],
									"query": [
										{
											"key": "_queryFilter",
											"value": "userName+eq+'dcrane'"
										},
										{
											"key": "_fields",
											"value": "*,/_meta/*"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Registration",
					"item": [
						{
							"name": "1 - Initiate",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-NoSession",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{host}}/openidm/selfservice/registration",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"registration"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Get Requirements",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"selfServiceToken\", jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-type",
										"value": "application/json"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-Username",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-NoSession",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"input\":{\"input\":{}}}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/registration?_action=submitRequirements",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"registration"
									],
									"query": [
										{
											"key": "_action",
											"value": "submitRequirements"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Submit Requirements",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"selfServiceToken\", jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-type",
										"value": "application/json"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-Username",
										"value": "anonymous"
									},
									{
										"key": "X-OpenIDM-NoSession",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"input\":{\n      \"user\":{\n         \"userName\":\"vscheuber\",\n         \"givenName\":\"Volker\",\n         \"sn\":\"Scheuber\",\n         \"mail\":\"vscheuber@gmail.com\",\n         \"preferences\":{\n            \"updates\":false,\n            \"marketing\":false\n         },\n         \"password\":\"Passw0rd\"\n      },\n      \"consentGiven\":\"true\",\n      \"accept\":\"true\"\n   },\n   \"token\":\"{{selfServiceToken}}\"\n}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/registration?_action=submitRequirements",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"registration"
									],
									"query": [
										{
											"key": "_action",
											"value": "submitRequirements"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "T&Cs",
					"item": [
						{
							"name": "T&Cs Step 1 - Get Requirements",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"pwdResetToken\", jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"type": "text",
										"value": "openidm-admin"
									},
									{
										"key": "X-OpenIDM-Password",
										"type": "text",
										"value": "{{openidmPassword}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-OpenIDM-RunAs",
										"value": "bjensen",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/termsAndConditions?_prettyPrint=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"termsAndConditions"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										}
									]
								},
								"description": "Initial Requirements for Password Reset"
							},
							"response": []
						},
						{
							"name": "T&Cs Step 2 - Accept Requirements",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"pwdResetToken\", jsonData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"type": "text",
										"value": "openidm-admin"
									},
									{
										"key": "X-OpenIDM-Password",
										"type": "text",
										"value": "Botw@2020"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-OpenIDM-RunAs",
										"type": "text",
										"value": "bjensen"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"input\":{\"accept\":\"true\"}}"
								},
								"url": {
									"raw": "{{host}}/openidm/selfservice/termsAndConditions?_prettyPrint=true&_action=submitRequirements",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"selfservice",
										"termsAndConditions"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										},
										{
											"key": "_action",
											"value": "submitRequirements"
										}
									]
								},
								"description": "Initial Requirements for Password Reset"
							},
							"response": []
						}
					]
				},
				{
					"name": "/cluster",
					"item": [
						{
							"name": "Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/openidm/cluster?_queryFilter=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"cluster"
									],
									"query": [
										{
											"key": "_queryFilter",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/config",
					"item": [
						{
							"name": "/emailTemplate",
							"item": [
								{
									"name": "List all email templates",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/config?_queryFilter=_id sw 'emailTemplate'",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config"
											],
											"query": [
												{
													"key": "_queryFilter",
													"value": "_id sw 'emailTemplate'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get email template",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/config/emailTemplate/oneTimePassword",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"emailTemplate",
												"oneTimePassword"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put email template 'OneTimePassword'",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"from\": \"\",\n    \"subject\": {\n        \"en\": \"One-Time Password for login\"\n    },\n    \"message\": {\n        \"en\": \"<h3>This is your one-time password:</h3><h4>{{object.description}}</a></h4>\"\n    },\n    \"defaultLocale\": \"en\",\n    \"mimeType\": \"text/html\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/config/emailTemplate/oneTimePassword",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"emailTemplate",
												"oneTimePassword"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put email template 'multiFactorEmailLink'",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"from\": \"\",\n    \"subject\": {\n        \"en\": \"Multi-Factor Email for Hackathon18 login\"\n    },\n    \"message\": {\n        \"en\": \"<h3>You started a multi-factor login process.</h3><h4><a href=\\\"{{object.resumeURI}}\\\">Complete login</a></h4>\"\n    },\n    \"defaultLocale\": \"en\",\n    \"mimeType\": \"text/html\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/config/emailTemplate/multiFactorEmailLink",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"emailTemplate",
												"multiFactorEmailLink"
											]
										}
									},
									"response": []
								},
								{
									"name": "Patch email template 'OneTimePassword'",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"operation\": \"remove\",\n        \"field\": \"/sn\",\n        \"value\": \"Scheuber\"\n    },\n    {\n        \"operation\": \"replace\",\n        \"field\": \"/roles\",\n        \"value\": [\n            {\n                \"_ref\": \"managed/role/24808eae-4496-471a-9bd8-bbe008776d23\",\n                \"_refResourceCollection\": \"managed/role\"\n            }\n        ]\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/config/emailTemplate/oneTimePassword",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"emailTemplate",
												"oneTimePassword"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "/policy",
							"item": [
								{
									"name": "Get policies",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/config/policy",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"policy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get policies for alpha_user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/policy/managed/alpha_user/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"policy",
												"managed",
												"alpha_user",
												"*"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/fieldPolicy",
							"item": [
								{
									"name": "Get fieldPolicy/alpha_user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/config/fieldPolicy/alpha_user",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"fieldPolicy",
												"alpha_user"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/authentication",
							"item": [
								{
									"name": "Get authentication configuration",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/config/authentication?_prettyPrint=true&_fields=",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"authentication"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_fields",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/managed",
							"item": [
								{
									"name": "Get managed.json",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/config/managed",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"managed"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put managed.json",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true,
											"connection": true
										}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "if-match",
												"value": "\"*\"",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json, text/javascript, */*; q=0.01",
												"type": "text"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest",
												"type": "text"
											},
											{
												"key": "Origin",
												"value": "{{host}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "en-us",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"objects\":[{\"meta\":{\"property\":\"_meta\",\"resourceCollection\":\"managed/alpha_usermeta\",\"trackedProperties\":[\"createDate\",\"lastChanged\"]},\"name\":\"alpha_user\",\"notifications\":{},\"onCreate\":{\"source\":\"require('onCreateUser').setDefaultFields(object);\",\"type\":\"text/javascript\"},\"onUpdate\":{\"source\":\"require('onUpdateUser').preserveLastSync(object, oldObject, request);\",\"type\":\"text/javascript\"},\"schema\":{\"$schema\":\"http://json-schema.org/draft-03/schema\",\"icon\":\"fa-user\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User\",\"mat-icon\":\"people\",\"order\":[\"_id\",\"userName\",\"password\",\"givenName\",\"cn\",\"sn\",\"mail\",\"description\",\"accountStatus\",\"telephoneNumber\",\"postalAddress\",\"city\",\"postalCode\",\"country\",\"stateProvince\",\"roles\",\"manager\",\"authzRoles\",\"reports\",\"effectiveRoles\",\"effectiveAssignments\",\"lastSync\",\"kbaInfo\",\"preferences\",\"consentedMappings\",\"ownerOfOrg\",\"adminOfOrg\",\"memberOfOrg\",\"memberOfOrgIDs\",\"frIndexedString1\",\"frIndexedString2\",\"frIndexedString3\",\"frIndexedString4\",\"frIndexedString5\",\"frUnindexedString1\",\"frUnindexedString2\",\"frUnindexedString3\",\"frUnindexedString4\",\"frUnindexedString5\",\"frIndexedMultivalued1\",\"frIndexedMultivalued2\",\"frIndexedMultivalued3\",\"frIndexedMultivalued4\",\"frIndexedMultivalued5\",\"frUnindexedMultivalued1\",\"frUnindexedMultivalued2\",\"frUnindexedMultivalued3\",\"frUnindexedMultivalued4\",\"frUnindexedMultivalued5\",\"frIndexedDate1\",\"frIndexedDate2\",\"frIndexedDate3\",\"frIndexedDate4\",\"frIndexedDate5\",\"frUnindexedDate1\",\"frUnindexedDate2\",\"frUnindexedDate3\",\"frUnindexedDate4\",\"frUnindexedDate5\",\"frIndexedInteger1\",\"frIndexedInteger2\",\"frIndexedInteger3\",\"frIndexedInteger4\",\"frIndexedInteger5\",\"frUnindexedInteger1\",\"frUnindexedInteger2\",\"frUnindexedInteger3\",\"frUnindexedInteger4\",\"frUnindexedInteger5\"],\"properties\":{\"_id\":{\"description\":\"User ID\",\"isPersonal\":false,\"policies\":[{\"params\":{\"forbiddenChars\":[\"/\"]},\"policyId\":\"cannot-contain-characters\"}],\"searchable\":false,\"type\":\"string\",\"usageDescription\":null,\"userEditable\":false,\"viewable\":false},\"accountStatus\":{\"description\":\"Status\",\"isPersonal\":false,\"searchable\":true,\"title\":\"Status\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":false,\"viewable\":true},\"adminOfOrg\":{\"items\":{\"notifySelf\":false,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":true,\"path\":\"managed/alpha_organization\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"admins\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"policies\":[],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Organizations I Administer\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"aliasList\":{\"description\":\"List of identity aliases used primarily to record social IdP subjects for this user\",\"isVirtual\":false,\"items\":{\"title\":\"User Alias Names Items\",\"type\":\"string\"},\"returnByDefault\":false,\"searchable\":false,\"title\":\"User Alias Names List\",\"type\":\"array\",\"userEditable\":true,\"viewable\":false},\"authzRoles\":{\"description\":\"Authorization Roles\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles\",\"isPersonal\":false,\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items\",\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Authorization Roles Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"conditionalAssociationField\":\"condition\",\"label\":\"Internal Role\",\"path\":\"internal/role\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"authzMembers\",\"reverseRelationship\":true,\"title\":\"Authorization Roles Items\",\"type\":\"relationship\",\"validate\":true},\"returnByDefault\":false,\"title\":\"Authorization Roles\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":false,\"viewable\":true},\"city\":{\"description\":\"City\",\"isPersonal\":false,\"title\":\"City\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"cn\":{\"description\":\"Common Name\",\"isPersonal\":true,\"isVirtual\":true,\"onStore\":{\"source\":\"object.cn || (object.givenName + ' ' + object.sn)\",\"type\":\"text/javascript\"},\"scope\":\"private\",\"searchable\":false,\"title\":\"Common Name\",\"type\":\"string\",\"userEditable\":false,\"viewable\":false},\"consentedMappings\":{\"description\":\"Consented Mappings\",\"isPersonal\":false,\"isVirtual\":false,\"items\":{\"items\":{\"order\":[\"mapping\",\"consentDate\"],\"properties\":{\"consentDate\":{\"description\":\"Consent Date\",\"searchable\":true,\"title\":\"Consent Date\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true},\"mapping\":{\"description\":\"Mapping\",\"searchable\":true,\"title\":\"Mapping\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true}},\"required\":[\"mapping\",\"consentDate\"],\"title\":\"Consented Mappings Item\",\"type\":\"object\"},\"title\":\"Consented Mappings Items\",\"type\":\"array\"},\"returnByDefault\":false,\"searchable\":false,\"title\":\"Consented Mappings\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":false},\"country\":{\"description\":\"Country\",\"isPersonal\":false,\"title\":\"Country\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"description\":{\"description\":\"Description\",\"isPersonal\":false,\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"effectiveAssignments\":{\"description\":\"Effective Assignments\",\"isPersonal\":false,\"isVirtual\":true,\"items\":{\"title\":\"Effective Assignments Items\",\"type\":\"object\"},\"queryConfig\":{\"referencedObjectFields\":[\"*\"],\"referencedRelationshipFields\":[\"roles\",\"assignments\"]},\"returnByDefault\":true,\"title\":\"Effective Assignments\",\"type\":\"array\",\"usageDescription\":null,\"viewable\":false},\"effectiveRoles\":{\"description\":\"Effective Roles\",\"isPersonal\":false,\"isVirtual\":true,\"items\":{\"title\":\"Effective Roles Items\",\"type\":\"object\"},\"queryConfig\":{\"referencedRelationshipFields\":[\"roles\"]},\"returnByDefault\":true,\"title\":\"Effective Roles\",\"type\":\"array\",\"usageDescription\":null,\"viewable\":false},\"frIndexedDate1\":{\"description\":\"Generic Indexed Date 1\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 1\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedDate2\":{\"description\":\"Generic Indexed Date 2\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 2\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedDate3\":{\"description\":\"Generic Indexed Date 3\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 3\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedDate4\":{\"description\":\"Generic Indexed Date 4\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 4\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedDate5\":{\"description\":\"Generic Indexed Date 5\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 5\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedInteger1\":{\"description\":\"Generic Indexed Integer 1\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 1\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedInteger2\":{\"description\":\"Generic Indexed Integer 2\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 2\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedInteger3\":{\"description\":\"Generic Indexed Integer 3\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 3\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedInteger4\":{\"description\":\"Generic Indexed Integer 4\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 4\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedInteger5\":{\"description\":\"Account Number\",\"isPersonal\":false,\"title\":\"Account Number\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued1\":{\"description\":\"Generic Indexed Multivalue 1\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 1\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued2\":{\"description\":\"Generic Indexed Multivalue 2\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 2\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued3\":{\"description\":\"Generic Indexed Multivalue 3\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 3\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued4\":{\"description\":\"Generic Indexed Multivalue 4\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 4\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued5\":{\"description\":\"Generic Indexed Multivalue 5\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 5\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedString1\":{\"description\":\"Generic Indexed String 1\",\"isPersonal\":false,\"title\":\"Generic Indexed String 1\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedString2\":{\"deleteQueryConfig\":false,\"description\":\"Date of Birth [YYYY-MM-DD]\",\"isPersonal\":false,\"isVirtual\":false,\"searchable\":false,\"title\":\"Date of Birth [YYYY-MM-DD]\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedString3\":{\"deleteQueryConfig\":false,\"description\":\"Patient ID\",\"isPersonal\":false,\"isVirtual\":false,\"searchable\":false,\"title\":\"Patient ID\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedString4\":{\"description\":\"Generic Indexed String 4\",\"isPersonal\":false,\"title\":\"Generic Indexed String 4\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frIndexedString5\":{\"description\":\"Generic Indexed String 5\",\"isPersonal\":false,\"title\":\"Generic Indexed String 5\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedDate1\":{\"description\":\"Generic Unindexed Date 1\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 1\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedDate2\":{\"description\":\"Generic Unindexed Date 2\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 2\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedDate3\":{\"description\":\"Generic Unindexed Date 3\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 3\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedDate4\":{\"description\":\"Generic Unindexed Date 4\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 4\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedDate5\":{\"description\":\"Generic Unindexed Date 5\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 5\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger1\":{\"description\":\"Generic Unindexed Integer 1\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 1\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger2\":{\"description\":\"Generic Unindexed Integer 2\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 2\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger3\":{\"description\":\"Generic Unindexed Integer 3\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 3\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger4\":{\"description\":\"Generic Unindexed Integer 4\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 4\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger5\":{\"description\":\"Security PIN\",\"isPersonal\":false,\"title\":\"Security PIN\",\"type\":\"number\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued1\":{\"description\":\"Generic Unindexed Multivalue 1\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 1\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued2\":{\"description\":\"Generic Unindexed Multivalue 2\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 2\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued3\":{\"description\":\"Generic Unindexed Multivalue 3\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 3\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued4\":{\"description\":\"Generic Unindexed Multivalue 4\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 4\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued5\":{\"description\":\"Generic Unindexed Multivalue 5\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 5\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedString1\":{\"description\":\"Generic Unindexed String 1\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 1\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedString2\":{\"description\":\"Generic Unindexed String 2\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 2\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedString3\":{\"description\":\"Generic Unindexed String 3\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 3\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedString4\":{\"description\":\"Generic Unindexed String 4\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 4\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"frUnindexedString5\":{\"description\":\"Generic Unindexed String 5\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 5\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"givenName\":{\"description\":\"First Name\",\"isPersonal\":true,\"searchable\":true,\"title\":\"First Name\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"kbaInfo\":{\"description\":\"KBA Info\",\"isPersonal\":true,\"items\":{\"order\":[\"answer\",\"customQuestion\",\"questionId\"],\"properties\":{\"answer\":{\"description\":\"Answer\",\"type\":\"string\"},\"customQuestion\":{\"description\":\"Custom question\",\"type\":\"string\"},\"questionId\":{\"description\":\"Question ID\",\"type\":\"string\"}},\"required\":[],\"title\":\"KBA Info Items\",\"type\":\"object\"},\"type\":\"array\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":false},\"lastSync\":{\"description\":\"Last Sync timestamp\",\"isPersonal\":false,\"order\":[\"effectiveAssignments\",\"timestamp\"],\"properties\":{\"effectiveAssignments\":{\"description\":\"Effective Assignments\",\"items\":{\"title\":\"Effective Assignments Items\",\"type\":\"object\"},\"title\":\"Effective Assignments\",\"type\":\"array\"},\"timestamp\":{\"description\":\"Timestamp\",\"type\":\"string\"}},\"required\":[],\"scope\":\"private\",\"searchable\":false,\"title\":\"Last Sync timestamp\",\"type\":\"object\",\"usageDescription\":null,\"viewable\":false},\"mail\":{\"description\":\"Email Address\",\"isPersonal\":true,\"policies\":[{\"policyId\":\"valid-email-address-format\"}],\"searchable\":true,\"title\":\"Email Address\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"manager\":{\"description\":\"Manager\",\"isPersonal\":false,\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Manager _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"path\":\"managed/alpha_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"reports\",\"reverseRelationship\":true,\"searchable\":false,\"title\":\"Manager\",\"type\":\"relationship\",\"usageDescription\":null,\"userEditable\":false,\"validate\":true,\"viewable\":true},\"memberOfOrg\":{\"items\":{\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":false,\"path\":\"managed/alpha_organization\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"members\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"policies\":[],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Organizations to which I Belong\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"memberOfOrgIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"org identifiers\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"_id\",\"parentIDs\"],\"referencedRelationshipFields\":[\"memberOfOrg\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"MemberOfOrgIDs\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"ownerOfOrg\":{\"items\":{\"notifySelf\":false,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":true,\"path\":\"managed/alpha_organization\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"owners\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"policies\":[],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Organizations I Own\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"password\":{\"description\":\"Password\",\"isPersonal\":false,\"isProtected\":true,\"scope\":\"private\",\"searchable\":false,\"title\":\"Password\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":false},\"postalAddress\":{\"description\":\"Address 1\",\"isPersonal\":true,\"title\":\"Address 1\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"postalCode\":{\"description\":\"Postal Code\",\"isPersonal\":false,\"title\":\"Postal Code\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"preferences\":{\"deleteQueryConfig\":false,\"description\":\"Preferences\",\"isPersonal\":false,\"isVirtual\":false,\"nullable\":false,\"order\":[\"updates\",\"marketing\",\"a31d60a2-91e0-40df-a6c4-f70cd97b5676\",\"cfac4e5f-065f-48c1-8cfb-bbd4ff0fd6f0\"],\"properties\":{\"a31d60a2-91e0-40df-a6c4-f70cd97b5676\":{\"deleteQueryConfig\":false,\"description\":\"Send me emails\",\"isVirtual\":false,\"searchable\":false,\"title\":null,\"type\":\"boolean\",\"userEditable\":true,\"viewable\":true},\"cfac4e5f-065f-48c1-8cfb-bbd4ff0fd6f0\":{\"deleteQueryConfig\":false,\"description\":\"Send me news and updates\",\"isVirtual\":false,\"searchable\":false,\"title\":null,\"type\":\"boolean\",\"userEditable\":true,\"viewable\":true},\"marketing\":{\"description\":\"Send me special offers and services\",\"type\":\"boolean\"},\"updates\":{\"description\":\"Send me news and updates\",\"type\":\"boolean\"}},\"required\":[],\"searchable\":false,\"title\":\"Preferences\",\"type\":\"object\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"reports\":{\"description\":\"Direct Reports\",\"isPersonal\":false,\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items\",\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Direct Reports Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"path\":\"managed/alpha_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"manager\",\"reverseRelationship\":true,\"title\":\"Direct Reports Items\",\"type\":\"relationship\",\"validate\":true},\"returnByDefault\":false,\"title\":\"Direct Reports\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":false,\"viewable\":true},\"roles\":{\"description\":\"Provisioning Roles\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:roles\",\"isPersonal\":false,\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items\",\"notifySelf\":true,\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_grantType\":{\"description\":\"Grant Type\",\"label\":\"Grant Type\",\"type\":\"string\"},\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Provisioning Roles Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"conditionalAssociationField\":\"condition\",\"label\":\"Role\",\"path\":\"managed/alpha_role\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"members\",\"reverseRelationship\":true,\"title\":\"Provisioning Roles Items\",\"type\":\"relationship\",\"validate\":true},\"relationshipGrantTemporalConstraintsEnforced\":true,\"returnByDefault\":false,\"title\":\"Provisioning Roles\",\"type\":\"array\",\"usageDescription\":null,\"userEditable\":false,\"viewable\":true},\"sn\":{\"description\":\"Last Name\",\"isPersonal\":true,\"searchable\":true,\"title\":\"Last Name\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"stateProvince\":{\"description\":\"State/Province\",\"isPersonal\":false,\"title\":\"State/Province\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"telephoneNumber\":{\"description\":\"Telephone Number\",\"isPersonal\":true,\"pattern\":\"^\\\\+?([0-9\\\\- \\\\(\\\\)])*$\",\"title\":\"Telephone Number\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true},\"userName\":{\"description\":\"Username\",\"isPersonal\":true,\"minLength\":1,\"policies\":[{\"policyId\":\"valid-username\"},{\"params\":{\"forbiddenChars\":[\"/\"]},\"policyId\":\"cannot-contain-characters\"},{\"params\":{\"minLength\":1},\"policyId\":\"minimum-length\"},{\"params\":{\"maxLength\":255},\"policyId\":\"maximum-length\"}],\"searchable\":true,\"title\":\"Username\",\"type\":\"string\",\"usageDescription\":null,\"userEditable\":true,\"viewable\":true}},\"required\":[\"userName\",\"givenName\",\"sn\",\"mail\"],\"title\":\"Alpha realm - User\",\"type\":\"object\",\"viewable\":true}},{\"meta\":{\"property\":\"_meta\",\"resourceCollection\":\"managed/bravo_usermeta\",\"trackedProperties\":[\"createDate\",\"lastChanged\"]},\"name\":\"bravo_user\",\"notifications\":{},\"onCreate\":{\"source\":\"require('onCreateUser').setDefaultFields(object);\",\"type\":\"text/javascript\"},\"onUpdate\":{\"source\":\"require('onUpdateUser').preserveLastSync(object, oldObject, request);\",\"type\":\"text/javascript\"},\"schema\":{\"$schema\":\"http://json-schema.org/draft-03/schema\",\"icon\":\"fa-user\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User\",\"mat-icon\":\"people\",\"order\":[\"_id\",\"userName\",\"password\",\"givenName\",\"cn\",\"sn\",\"mail\",\"description\",\"accountStatus\",\"telephoneNumber\",\"postalAddress\",\"city\",\"postalCode\",\"country\",\"stateProvince\",\"roles\",\"manager\",\"authzRoles\",\"reports\",\"effectiveRoles\",\"effectiveAssignments\",\"lastSync\",\"kbaInfo\",\"preferences\",\"consentedMappings\",\"ownerOfOrg\",\"adminOfOrg\",\"memberOfOrg\",\"memberOfOrgIDs\",\"frIndexedString1\",\"frIndexedString2\",\"frIndexedString3\",\"frIndexedString4\",\"frIndexedString5\",\"frUnindexedString1\",\"frUnindexedString2\",\"frUnindexedString3\",\"frUnindexedString4\",\"frUnindexedString5\",\"frIndexedMultivalued1\",\"frIndexedMultivalued2\",\"frIndexedMultivalued3\",\"frIndexedMultivalued4\",\"frIndexedMultivalued5\",\"frUnindexedMultivalued1\",\"frUnindexedMultivalued2\",\"frUnindexedMultivalued3\",\"frUnindexedMultivalued4\",\"frUnindexedMultivalued5\",\"frIndexedDate1\",\"frIndexedDate2\",\"frIndexedDate3\",\"frIndexedDate4\",\"frIndexedDate5\",\"frUnindexedDate1\",\"frUnindexedDate2\",\"frUnindexedDate3\",\"frUnindexedDate4\",\"frUnindexedDate5\",\"frIndexedInteger1\",\"frIndexedInteger2\",\"frIndexedInteger3\",\"frIndexedInteger4\",\"frIndexedInteger5\",\"frUnindexedInteger1\",\"frUnindexedInteger2\",\"frUnindexedInteger3\",\"frUnindexedInteger4\",\"frUnindexedInteger5\"],\"properties\":{\"_id\":{\"description\":\"User ID\",\"isPersonal\":false,\"policies\":[{\"params\":{\"forbiddenChars\":[\"/\"]},\"policyId\":\"cannot-contain-characters\"}],\"searchable\":false,\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":false,\"viewable\":false},\"accountStatus\":{\"description\":\"Status\",\"isPersonal\":false,\"searchable\":true,\"title\":\"Status\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":false,\"viewable\":true},\"adminOfOrg\":{\"items\":{\"notifySelf\":false,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":true,\"path\":\"managed/bravo_organization\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"admins\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"policies\":[],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Organizations I Administer\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"aliasList\":{\"description\":\"List of identity aliases used primarily to record social IdP subjects for this user\",\"isVirtual\":false,\"items\":{\"title\":\"User Alias Names Items\",\"type\":\"string\"},\"returnByDefault\":false,\"searchable\":false,\"title\":\"User Alias Names List\",\"type\":\"array\",\"userEditable\":true,\"viewable\":false},\"authzRoles\":{\"description\":\"Authorization Roles\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles\",\"isPersonal\":false,\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items\",\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Authorization Roles Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"conditionalAssociationField\":\"condition\",\"label\":\"Internal Role\",\"path\":\"internal/role\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"authzMembers\",\"reverseRelationship\":true,\"title\":\"Authorization Roles Items\",\"type\":\"relationship\",\"validate\":true},\"returnByDefault\":false,\"title\":\"Authorization Roles\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":false,\"viewable\":true},\"city\":{\"description\":\"City\",\"isPersonal\":false,\"title\":\"City\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"cn\":{\"description\":\"Common Name\",\"isPersonal\":true,\"isVirtual\":true,\"onStore\":{\"source\":\"object.cn || (object.givenName + ' ' + object.sn)\",\"type\":\"text/javascript\"},\"scope\":\"private\",\"searchable\":false,\"title\":\"Common Name\",\"type\":\"string\",\"userEditable\":false,\"viewable\":false},\"consentedMappings\":{\"description\":\"Consented Mappings\",\"isPersonal\":false,\"isVirtual\":false,\"items\":{\"items\":{\"order\":[\"mapping\",\"consentDate\"],\"properties\":{\"consentDate\":{\"description\":\"Consent Date\",\"searchable\":true,\"title\":\"Consent Date\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true},\"mapping\":{\"description\":\"Mapping\",\"searchable\":true,\"title\":\"Mapping\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true}},\"required\":[\"mapping\",\"consentDate\"],\"title\":\"Consented Mappings Item\",\"type\":\"object\"},\"title\":\"Consented Mappings Items\",\"type\":\"array\"},\"returnByDefault\":false,\"searchable\":false,\"title\":\"Consented Mappings\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":false},\"country\":{\"description\":\"Country\",\"isPersonal\":false,\"title\":\"Country\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"description\":{\"description\":\"Description\",\"isPersonal\":false,\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"effectiveAssignments\":{\"description\":\"Effective Assignments\",\"isPersonal\":false,\"isVirtual\":true,\"items\":{\"title\":\"Effective Assignments Items\",\"type\":\"object\"},\"queryConfig\":{\"referencedObjectFields\":[\"*\"],\"referencedRelationshipFields\":[\"roles\",\"assignments\"]},\"returnByDefault\":true,\"title\":\"Effective Assignments\",\"type\":\"array\",\"usageDescription\":\"\",\"viewable\":false},\"effectiveRoles\":{\"description\":\"Effective Roles\",\"isPersonal\":false,\"isVirtual\":true,\"items\":{\"title\":\"Effective Roles Items\",\"type\":\"object\"},\"queryConfig\":{\"referencedRelationshipFields\":[\"roles\"]},\"returnByDefault\":true,\"title\":\"Effective Roles\",\"type\":\"array\",\"usageDescription\":\"\",\"viewable\":false},\"frIndexedDate1\":{\"description\":\"Generic Indexed Date 1\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 1\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedDate2\":{\"description\":\"Generic Indexed Date 2\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 2\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedDate3\":{\"description\":\"Generic Indexed Date 3\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 3\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedDate4\":{\"description\":\"Generic Indexed Date 4\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 4\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedDate5\":{\"description\":\"Generic Indexed Date 5\",\"isPersonal\":false,\"title\":\"Generic Indexed Date 5\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedInteger1\":{\"description\":\"Generic Indexed Integer 1\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 1\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedInteger2\":{\"description\":\"Generic Indexed Integer 2\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 2\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedInteger3\":{\"description\":\"Generic Indexed Integer 3\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 3\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedInteger4\":{\"description\":\"Generic Indexed Integer 4\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 4\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedInteger5\":{\"description\":\"Generic Indexed Integer 5\",\"isPersonal\":false,\"title\":\"Generic Indexed Integer 5\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued1\":{\"description\":\"Generic Indexed Multivalue 1\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 1\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued2\":{\"description\":\"Generic Indexed Multivalue 2\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 2\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued3\":{\"description\":\"Generic Indexed Multivalue 3\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 3\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued4\":{\"description\":\"Generic Indexed Multivalue 4\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 4\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedMultivalued5\":{\"description\":\"Generic Indexed Multivalue 5\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Indexed Multivalue 5\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedString1\":{\"description\":\"Generic Indexed String 1\",\"isPersonal\":false,\"title\":\"Generic Indexed String 1\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedString2\":{\"description\":\"Generic Indexed String 2\",\"isPersonal\":false,\"title\":\"Generic Indexed String 2\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedString3\":{\"description\":\"Generic Indexed String 3\",\"isPersonal\":false,\"title\":\"Generic Indexed String 3\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedString4\":{\"description\":\"Generic Indexed String 4\",\"isPersonal\":false,\"title\":\"Generic Indexed String 4\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frIndexedString5\":{\"description\":\"Generic Indexed String 5\",\"isPersonal\":false,\"title\":\"Generic Indexed String 5\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedDate1\":{\"description\":\"Generic Unindexed Date 1\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 1\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedDate2\":{\"description\":\"Generic Unindexed Date 2\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 2\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedDate3\":{\"description\":\"Generic Unindexed Date 3\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 3\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedDate4\":{\"description\":\"Generic Unindexed Date 4\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 4\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedDate5\":{\"description\":\"Generic Unindexed Date 5\",\"isPersonal\":false,\"title\":\"Generic Unindexed Date 5\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger1\":{\"description\":\"Generic Unindexed Integer 1\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 1\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger2\":{\"description\":\"Generic Unindexed Integer 2\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 2\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger3\":{\"description\":\"Generic Unindexed Integer 3\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 3\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger4\":{\"description\":\"Generic Unindexed Integer 4\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 4\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedInteger5\":{\"description\":\"Generic Unindexed Integer 5\",\"isPersonal\":false,\"title\":\"Generic Unindexed Integer 5\",\"type\":\"number\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued1\":{\"description\":\"Generic Unindexed Multivalue 1\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 1\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued2\":{\"description\":\"Generic Unindexed Multivalue 2\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 2\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued3\":{\"description\":\"Generic Unindexed Multivalue 3\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 3\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued4\":{\"description\":\"Generic Unindexed Multivalue 4\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 4\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedMultivalued5\":{\"description\":\"Generic Unindexed Multivalue 5\",\"isPersonal\":false,\"items\":{\"type\":\"string\"},\"title\":\"Generic Unindexed Multivalue 5\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedString1\":{\"description\":\"Generic Unindexed String 1\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 1\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedString2\":{\"description\":\"Generic Unindexed String 2\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 2\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedString3\":{\"description\":\"Generic Unindexed String 3\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 3\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedString4\":{\"description\":\"Generic Unindexed String 4\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 4\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"frUnindexedString5\":{\"description\":\"Generic Unindexed String 5\",\"isPersonal\":false,\"title\":\"Generic Unindexed String 5\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"givenName\":{\"description\":\"First Name\",\"isPersonal\":true,\"searchable\":true,\"title\":\"First Name\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"kbaInfo\":{\"description\":\"KBA Info\",\"isPersonal\":true,\"items\":{\"order\":[\"answer\",\"customQuestion\",\"questionId\"],\"properties\":{\"answer\":{\"description\":\"Answer\",\"type\":\"string\"},\"customQuestion\":{\"description\":\"Custom question\",\"type\":\"string\"},\"questionId\":{\"description\":\"Question ID\",\"type\":\"string\"}},\"required\":[],\"title\":\"KBA Info Items\",\"type\":\"object\"},\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":false},\"lastSync\":{\"description\":\"Last Sync timestamp\",\"isPersonal\":false,\"order\":[\"effectiveAssignments\",\"timestamp\"],\"properties\":{\"effectiveAssignments\":{\"description\":\"Effective Assignments\",\"items\":{\"title\":\"Effective Assignments Items\",\"type\":\"object\"},\"title\":\"Effective Assignments\",\"type\":\"array\"},\"timestamp\":{\"description\":\"Timestamp\",\"type\":\"string\"}},\"required\":[],\"scope\":\"private\",\"searchable\":false,\"title\":\"Last Sync timestamp\",\"type\":\"object\",\"usageDescription\":\"\",\"viewable\":false},\"mail\":{\"description\":\"Email Address\",\"isPersonal\":true,\"policies\":[{\"policyId\":\"valid-email-address-format\"}],\"searchable\":true,\"title\":\"Email Address\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"manager\":{\"description\":\"Manager\",\"isPersonal\":false,\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Manager _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"path\":\"managed/bravo_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"reports\",\"reverseRelationship\":true,\"searchable\":false,\"title\":\"Manager\",\"type\":\"relationship\",\"usageDescription\":\"\",\"userEditable\":false,\"validate\":true,\"viewable\":true},\"memberOfOrg\":{\"items\":{\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":false,\"path\":\"managed/bravo_organization\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"members\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"policies\":[],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Organizations to which I Belong\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"memberOfOrgIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"org identifiers\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"_id\",\"parentIDs\"],\"referencedRelationshipFields\":[\"memberOfOrg\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"MemberOfOrgIDs\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"ownerOfOrg\":{\"items\":{\"notifySelf\":false,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":true,\"path\":\"managed/bravo_organization\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"owners\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"policies\":[],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Organizations I Own\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"password\":{\"description\":\"Password\",\"isPersonal\":false,\"isProtected\":true,\"scope\":\"private\",\"searchable\":false,\"title\":\"Password\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":false},\"postalAddress\":{\"description\":\"Address 1\",\"isPersonal\":true,\"title\":\"Address 1\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"postalCode\":{\"description\":\"Postal Code\",\"isPersonal\":false,\"title\":\"Postal Code\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"preferences\":{\"description\":\"Preferences\",\"isPersonal\":false,\"order\":[\"updates\",\"marketing\"],\"properties\":{\"marketing\":{\"description\":\"Send me special offers and services\",\"type\":\"boolean\"},\"updates\":{\"description\":\"Send me news and updates\",\"type\":\"boolean\"}},\"required\":[],\"searchable\":false,\"title\":\"Preferences\",\"type\":\"object\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"reports\":{\"description\":\"Direct Reports\",\"isPersonal\":false,\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items\",\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Direct Reports Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"path\":\"managed/bravo_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"manager\",\"reverseRelationship\":true,\"title\":\"Direct Reports Items\",\"type\":\"relationship\",\"validate\":true},\"returnByDefault\":false,\"title\":\"Direct Reports\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":false,\"viewable\":true},\"roles\":{\"description\":\"Provisioning Roles\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:roles\",\"isPersonal\":false,\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items\",\"notifySelf\":true,\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_grantType\":{\"description\":\"Grant Type\",\"label\":\"Grant Type\",\"type\":\"string\"},\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Provisioning Roles Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"conditionalAssociationField\":\"condition\",\"label\":\"Role\",\"path\":\"managed/bravo_role\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"members\",\"reverseRelationship\":true,\"title\":\"Provisioning Roles Items\",\"type\":\"relationship\",\"validate\":true},\"relationshipGrantTemporalConstraintsEnforced\":true,\"returnByDefault\":false,\"title\":\"Provisioning Roles\",\"type\":\"array\",\"usageDescription\":\"\",\"userEditable\":false,\"viewable\":true},\"sn\":{\"description\":\"Last Name\",\"isPersonal\":true,\"searchable\":true,\"title\":\"Last Name\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"stateProvince\":{\"description\":\"State/Province\",\"isPersonal\":false,\"title\":\"State/Province\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"telephoneNumber\":{\"description\":\"Telephone Number\",\"isPersonal\":true,\"pattern\":\"^\\\\+?([0-9\\\\- \\\\(\\\\)])*$\",\"title\":\"Telephone Number\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true},\"userName\":{\"description\":\"Username\",\"isPersonal\":true,\"minLength\":1,\"policies\":[{\"policyId\":\"valid-username\"},{\"params\":{\"forbiddenChars\":[\"/\"]},\"policyId\":\"cannot-contain-characters\"},{\"params\":{\"minLength\":1},\"policyId\":\"minimum-length\"},{\"params\":{\"maxLength\":255},\"policyId\":\"maximum-length\"}],\"searchable\":true,\"title\":\"Username\",\"type\":\"string\",\"usageDescription\":\"\",\"userEditable\":true,\"viewable\":true}},\"required\":[\"userName\",\"givenName\",\"sn\",\"mail\"],\"title\":\"Bravo realm - User\",\"type\":\"object\",\"viewable\":true}},{\"name\":\"alpha_role\",\"onDelete\":{\"file\":\"roles/onDelete-roles.js\",\"type\":\"text/javascript\"},\"postCreate\":{\"source\":\"require('roles/postOperation-roles').manageTemporalConstraints(resourceName);\",\"type\":\"text/javascript\"},\"postDelete\":{\"source\":\"require('roles/postOperation-roles').manageTemporalConstraints(resourceName);\",\"type\":\"text/javascript\"},\"postUpdate\":{\"source\":\"require('roles/postOperation-roles').manageTemporalConstraints(resourceName);\",\"type\":\"text/javascript\"},\"schema\":{\"$schema\":\"http://forgerock.org/json-schema#\",\"description\":\"\",\"icon\":\"fa-check-square-o\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Role\",\"mat-icon\":\"assignment_ind\",\"order\":[\"_id\",\"name\",\"description\",\"members\",\"assignments\",\"condition\",\"temporalConstraints\"],\"properties\":{\"_id\":{\"description\":\"Role ID\",\"searchable\":false,\"title\":\"Name\",\"type\":\"string\",\"viewable\":false},\"assignments\":{\"description\":\"Managed Assignments\",\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items\",\"notifySelf\":true,\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Managed Assignments Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Assignment\",\"path\":\"managed/alpha_assignment\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"roles\",\"reverseRelationship\":true,\"title\":\"Managed Assignments Items\",\"type\":\"relationship\",\"validate\":true},\"notifyRelationships\":[\"members\"],\"returnByDefault\":false,\"title\":\"Managed Assignments\",\"type\":\"array\",\"viewable\":true},\"condition\":{\"description\":\"A conditional filter for this role\",\"isConditional\":true,\"searchable\":false,\"title\":\"Condition\",\"type\":\"string\",\"viewable\":false},\"description\":{\"description\":\"The role description, used for display purposes.\",\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"viewable\":true},\"members\":{\"description\":\"Role Members\",\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items\",\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_grantType\":{\"description\":\"Grant Type\",\"label\":\"Grant Type\",\"type\":\"string\"},\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Role Members Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"conditionalAssociation\":true,\"label\":\"User\",\"notify\":true,\"path\":\"managed/alpha_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"roles\",\"reverseRelationship\":true,\"title\":\"Role Members Items\",\"type\":\"relationship\",\"validate\":true},\"relationshipGrantTemporalConstraintsEnforced\":true,\"returnByDefault\":false,\"title\":\"Role Members\",\"type\":\"array\",\"viewable\":true},\"name\":{\"description\":\"The role name, used for display purposes.\",\"searchable\":true,\"title\":\"Name\",\"type\":\"string\",\"viewable\":true},\"temporalConstraints\":{\"description\":\"An array of temporal constraints for a role\",\"isTemporalConstraint\":true,\"items\":{\"order\":[\"duration\"],\"properties\":{\"duration\":{\"description\":\"Duration\",\"type\":\"string\"}},\"required\":[\"duration\"],\"title\":\"Temporal Constraints Items\",\"type\":\"object\"},\"notifyRelationships\":[\"members\"],\"returnByDefault\":true,\"title\":\"Temporal Constraints\",\"type\":\"array\",\"viewable\":false}},\"required\":[\"name\"],\"title\":\"Alpha realm - Role\",\"type\":\"object\"}},{\"name\":\"bravo_role\",\"onDelete\":{\"file\":\"roles/onDelete-roles.js\",\"type\":\"text/javascript\"},\"postCreate\":{\"source\":\"require('roles/postOperation-roles').manageTemporalConstraints(resourceName);\",\"type\":\"text/javascript\"},\"postDelete\":{\"source\":\"require('roles/postOperation-roles').manageTemporalConstraints(resourceName);\",\"type\":\"text/javascript\"},\"postUpdate\":{\"source\":\"require('roles/postOperation-roles').manageTemporalConstraints(resourceName);\",\"type\":\"text/javascript\"},\"schema\":{\"$schema\":\"http://forgerock.org/json-schema#\",\"description\":\"\",\"icon\":\"fa-check-square-o\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Role\",\"mat-icon\":\"assignment_ind\",\"order\":[\"_id\",\"name\",\"description\",\"members\",\"assignments\",\"condition\",\"temporalConstraints\"],\"properties\":{\"_id\":{\"description\":\"Role ID\",\"searchable\":false,\"title\":\"Name\",\"type\":\"string\",\"viewable\":false},\"assignments\":{\"description\":\"Managed Assignments\",\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items\",\"notifySelf\":true,\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Managed Assignments Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Assignment\",\"path\":\"managed/bravo_assignment\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"roles\",\"reverseRelationship\":true,\"title\":\"Managed Assignments Items\",\"type\":\"relationship\",\"validate\":true},\"notifyRelationships\":[\"members\"],\"returnByDefault\":false,\"title\":\"Managed Assignments\",\"type\":\"array\",\"viewable\":true},\"condition\":{\"description\":\"A conditional filter for this role\",\"isConditional\":true,\"searchable\":false,\"title\":\"Condition\",\"type\":\"string\",\"viewable\":false},\"description\":{\"description\":\"The role description, used for display purposes.\",\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"viewable\":true},\"members\":{\"description\":\"Role Members\",\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items\",\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_grantType\":{\"description\":\"Grant Type\",\"label\":\"Grant Type\",\"type\":\"string\"},\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Role Members Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"conditionalAssociation\":true,\"label\":\"User\",\"notify\":true,\"path\":\"managed/bravo_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"roles\",\"reverseRelationship\":true,\"title\":\"Role Members Items\",\"type\":\"relationship\",\"validate\":true},\"relationshipGrantTemporalConstraintsEnforced\":true,\"returnByDefault\":false,\"title\":\"Role Members\",\"type\":\"array\",\"viewable\":true},\"name\":{\"description\":\"The role name, used for display purposes.\",\"searchable\":true,\"title\":\"Name\",\"type\":\"string\",\"viewable\":true},\"temporalConstraints\":{\"description\":\"An array of temporal constraints for a role\",\"isTemporalConstraint\":true,\"items\":{\"order\":[\"duration\"],\"properties\":{\"duration\":{\"description\":\"Duration\",\"type\":\"string\"}},\"required\":[\"duration\"],\"title\":\"Temporal Constraints Items\",\"type\":\"object\"},\"notifyRelationships\":[\"members\"],\"returnByDefault\":true,\"title\":\"Temporal Constraints\",\"type\":\"array\",\"viewable\":false}},\"required\":[\"name\"],\"title\":\"Bravo realm - Role\",\"type\":\"object\"}},{\"name\":\"alpha_assignment\",\"schema\":{\"$schema\":\"http://forgerock.org/json-schema#\",\"description\":\"A role assignment\",\"icon\":\"fa-key\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Assignment\",\"mat-icon\":\"vpn_key\",\"order\":[\"_id\",\"name\",\"description\",\"mapping\",\"attributes\",\"linkQualifiers\",\"roles\"],\"properties\":{\"_id\":{\"description\":\"The assignment ID\",\"searchable\":false,\"title\":\"Name\",\"type\":\"string\",\"viewable\":false},\"attributes\":{\"description\":\"The attributes operated on by this assignment.\",\"items\":{\"order\":[\"assignmentOperation\",\"unassignmentOperation\",\"name\",\"value\"],\"properties\":{\"assignmentOperation\":{\"description\":\"Assignment operation\",\"type\":\"string\"},\"name\":{\"description\":\"Name\",\"type\":\"string\"},\"unassignmentOperation\":{\"description\":\"Unassignment operation\",\"type\":\"string\"},\"value\":{\"description\":\"Value\",\"type\":\"string\"}},\"required\":[],\"title\":\"Assignment Attributes Items\",\"type\":\"object\"},\"notifyRelationships\":[\"roles\"],\"title\":\"Assignment Attributes\",\"type\":\"array\",\"viewable\":true},\"description\":{\"description\":\"The assignment description, used for display purposes.\",\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"viewable\":true},\"linkQualifiers\":{\"description\":\"Conditional link qualifiers to restrict this assignment to.\",\"items\":{\"title\":\"Link Qualifiers Items\",\"type\":\"string\"},\"title\":\"Link Qualifiers\",\"type\":\"array\",\"viewable\":true},\"mapping\":{\"description\":\"The name of the mapping this assignment applies to\",\"policies\":[{\"policyId\":\"mapping-exists\"}],\"searchable\":true,\"title\":\"Mapping\",\"type\":\"string\",\"viewable\":true},\"name\":{\"description\":\"The assignment name, used for display purposes.\",\"searchable\":true,\"title\":\"Name\",\"type\":\"string\",\"viewable\":true},\"roles\":{\"description\":\"Managed Roles\",\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items\",\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Managed Roles Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Role\",\"notify\":true,\"path\":\"managed/alpha_role\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"assignments\",\"reverseRelationship\":true,\"title\":\"Managed Roles Items\",\"type\":\"relationship\",\"validate\":true},\"returnByDefault\":false,\"title\":\"Managed Roles\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true}},\"required\":[\"name\",\"description\",\"mapping\"],\"title\":\"Alpha realm - Assignment\",\"type\":\"object\"}},{\"name\":\"bravo_assignment\",\"schema\":{\"$schema\":\"http://forgerock.org/json-schema#\",\"description\":\"A role assignment\",\"icon\":\"fa-key\",\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Assignment\",\"mat-icon\":\"vpn_key\",\"order\":[\"_id\",\"name\",\"description\",\"mapping\",\"attributes\",\"linkQualifiers\",\"roles\"],\"properties\":{\"_id\":{\"description\":\"The assignment ID\",\"searchable\":false,\"title\":\"Name\",\"type\":\"string\",\"viewable\":false},\"attributes\":{\"description\":\"The attributes operated on by this assignment.\",\"items\":{\"order\":[\"assignmentOperation\",\"unassignmentOperation\",\"name\",\"value\"],\"properties\":{\"assignmentOperation\":{\"description\":\"Assignment operation\",\"type\":\"string\"},\"name\":{\"description\":\"Name\",\"type\":\"string\"},\"unassignmentOperation\":{\"description\":\"Unassignment operation\",\"type\":\"string\"},\"value\":{\"description\":\"Value\",\"type\":\"string\"}},\"required\":[],\"title\":\"Assignment Attributes Items\",\"type\":\"object\"},\"notifyRelationships\":[\"roles\"],\"title\":\"Assignment Attributes\",\"type\":\"array\",\"viewable\":true},\"description\":{\"description\":\"The assignment description, used for display purposes.\",\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"viewable\":true},\"linkQualifiers\":{\"description\":\"Conditional link qualifiers to restrict this assignment to.\",\"items\":{\"title\":\"Link Qualifiers Items\",\"type\":\"string\"},\"title\":\"Link Qualifiers\",\"type\":\"array\",\"viewable\":true},\"mapping\":{\"description\":\"The name of the mapping this assignment applies to\",\"policies\":[{\"policyId\":\"mapping-exists\"}],\"searchable\":true,\"title\":\"Mapping\",\"type\":\"string\",\"viewable\":true},\"name\":{\"description\":\"The assignment name, used for display purposes.\",\"searchable\":true,\"title\":\"Name\",\"type\":\"string\",\"viewable\":true},\"roles\":{\"description\":\"Managed Roles\",\"items\":{\"id\":\"urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items\",\"properties\":{\"_ref\":{\"description\":\"References a relationship from a managed object\",\"type\":\"string\"},\"_refProperties\":{\"description\":\"Supports metadata within the relationship\",\"properties\":{\"_id\":{\"description\":\"_refProperties object ID\",\"type\":\"string\"}},\"title\":\"Managed Roles Items _refProperties\",\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Role\",\"notify\":true,\"path\":\"managed/bravo_role\",\"query\":{\"fields\":[\"name\"],\"queryFilter\":\"true\"}}],\"reversePropertyName\":\"assignments\",\"reverseRelationship\":true,\"title\":\"Managed Roles Items\",\"type\":\"relationship\",\"validate\":true},\"returnByDefault\":false,\"title\":\"Managed Roles\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true}},\"required\":[\"name\",\"description\",\"mapping\"],\"title\":\"Bravo realm - Assignment\",\"type\":\"object\"}},{\"name\":\"alpha_organization\",\"schema\":{\"$schema\":\"http://forgerock.org/json-schema#\",\"description\":\"An organization or tenant, whose resources are managed by organizational admins.\",\"icon\":\"fa-building\",\"mat-icon\":\"domain\",\"order\":[\"name\",\"description\",\"owners\",\"admins\",\"members\",\"parent\",\"children\",\"adminIDs\",\"ownerIDs\",\"parentAdminIDs\",\"parentOwnerIDs\",\"parentIDs\"],\"properties\":{\"adminIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"admin ids\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"_id\"],\"referencedRelationshipFields\":[\"admins\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"Admin user ids\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"admins\":{\"items\":{\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"notify\":false,\"path\":\"managed/alpha_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"adminOfOrg\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"notifyRelationships\":[\"children\"],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Administrators\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"children\":{\"description\":\"Child Organizations\",\"items\":{\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":true,\"path\":\"managed/alpha_organization\",\"query\":{\"fields\":[\"name\",\"description\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"parent\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"policies\":[],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Child Organizations\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"description\":{\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true},\"members\":{\"items\":{\"notifySelf\":false,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"notify\":true,\"path\":\"managed/alpha_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"memberOfOrg\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"returnByDefault\":false,\"searchable\":false,\"title\":\"Members\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"name\":{\"searchable\":true,\"title\":\"Name\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true},\"ownerIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"owner ids\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"_id\"],\"referencedRelationshipFields\":[\"owners\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"Owner user ids\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"owners\":{\"items\":{\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"notify\":false,\"path\":\"managed/alpha_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"ownerOfOrg\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"notifyRelationships\":[\"children\"],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Owner\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"parent\":{\"description\":\"Parent Organization\",\"notifyRelationships\":[\"children\",\"members\"],\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":true,\"path\":\"managed/alpha_organization\",\"query\":{\"fields\":[\"name\",\"description\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"returnByDefault\":false,\"reversePropertyName\":\"children\",\"reverseRelationship\":true,\"searchable\":false,\"title\":\"Parent Organization\",\"type\":\"relationship\",\"userEditable\":false,\"validate\":true,\"viewable\":true},\"parentAdminIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"user ids of parent admins\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"adminIDs\",\"parentAdminIDs\"],\"referencedRelationshipFields\":[\"parent\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"user ids of parent admins\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"parentIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"parent org ids\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"_id\",\"parentIDs\"],\"referencedRelationshipFields\":[\"parent\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"parent org ids\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"parentOwnerIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"user ids of parent owners\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"ownerIDs\",\"parentOwnerIDs\"],\"referencedRelationshipFields\":[\"parent\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"user ids of parent owners\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false}},\"required\":[\"name\"],\"title\":\"Alpha realm - Organization\",\"type\":\"object\"}},{\"name\":\"bravo_organization\",\"schema\":{\"$schema\":\"http://forgerock.org/json-schema#\",\"description\":\"An organization or tenant, whose resources are managed by organizational admins.\",\"icon\":\"fa-building\",\"mat-icon\":\"domain\",\"order\":[\"name\",\"description\",\"owners\",\"admins\",\"members\",\"parent\",\"children\",\"adminIDs\",\"ownerIDs\",\"parentAdminIDs\",\"parentOwnerIDs\",\"parentIDs\"],\"properties\":{\"adminIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"admin ids\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"_id\"],\"referencedRelationshipFields\":[\"admins\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"Admin user ids\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"admins\":{\"items\":{\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"notify\":false,\"path\":\"managed/bravo_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"adminOfOrg\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"notifyRelationships\":[\"children\"],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Administrators\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"children\":{\"description\":\"Child Organizations\",\"items\":{\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":true,\"path\":\"managed/bravo_organization\",\"query\":{\"fields\":[\"name\",\"description\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"parent\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"policies\":[],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Child Organizations\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"description\":{\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true},\"members\":{\"items\":{\"notifySelf\":false,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"notify\":true,\"path\":\"managed/bravo_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"memberOfOrg\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"returnByDefault\":false,\"searchable\":false,\"title\":\"Members\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"name\":{\"searchable\":true,\"title\":\"Name\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true},\"ownerIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"owner ids\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"_id\"],\"referencedRelationshipFields\":[\"owners\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"Owner user ids\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"owners\":{\"items\":{\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"User\",\"notify\":false,\"path\":\"managed/bravo_user\",\"query\":{\"fields\":[\"userName\",\"givenName\",\"sn\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"reversePropertyName\":\"ownerOfOrg\",\"reverseRelationship\":true,\"type\":\"relationship\",\"validate\":true},\"notifyRelationships\":[\"children\"],\"returnByDefault\":false,\"searchable\":false,\"title\":\"Owner\",\"type\":\"array\",\"userEditable\":false,\"viewable\":true},\"parent\":{\"description\":\"Parent Organization\",\"notifyRelationships\":[\"children\",\"members\"],\"notifySelf\":true,\"properties\":{\"_ref\":{\"type\":\"string\"},\"_refProperties\":{\"properties\":{\"_id\":{\"propName\":\"_id\",\"required\":false,\"type\":\"string\"}},\"type\":\"object\"}},\"resourceCollection\":[{\"label\":\"Organization\",\"notify\":true,\"path\":\"managed/bravo_organization\",\"query\":{\"fields\":[\"name\",\"description\"],\"queryFilter\":\"true\",\"sortKeys\":[]}}],\"returnByDefault\":false,\"reversePropertyName\":\"children\",\"reverseRelationship\":true,\"searchable\":false,\"title\":\"Parent Organization\",\"type\":\"relationship\",\"userEditable\":false,\"validate\":true,\"viewable\":true},\"parentAdminIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"user ids of parent admins\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"adminIDs\",\"parentAdminIDs\"],\"referencedRelationshipFields\":[\"parent\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"user ids of parent admins\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"parentIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"parent org ids\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"_id\",\"parentIDs\"],\"referencedRelationshipFields\":[\"parent\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"parent org ids\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false},\"parentOwnerIDs\":{\"isVirtual\":true,\"items\":{\"title\":\"user ids of parent owners\",\"type\":\"string\"},\"queryConfig\":{\"flattenProperties\":true,\"referencedObjectFields\":[\"ownerIDs\",\"parentOwnerIDs\"],\"referencedRelationshipFields\":[\"parent\"]},\"returnByDefault\":true,\"searchable\":false,\"title\":\"user ids of parent owners\",\"type\":\"array\",\"userEditable\":false,\"viewable\":false}},\"required\":[\"name\"],\"title\":\"Bravo realm - Organization\",\"type\":\"object\"}},{\"name\":\"preference\",\"schema\":{\"$schema\":\"http://forgerock.org/json-schema#\",\"description\":\"User Preference\",\"icon\":\"fa-check-square\",\"order\":[\"name\",\"description\",\"countries\"],\"properties\":{\"countries\":{\"items\":{\"type\":\"string\"},\"searchable\":false,\"title\":\"Countries\",\"type\":\"array\",\"userEditable\":true,\"viewable\":true},\"description\":{\"searchable\":true,\"title\":\"Description\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true},\"name\":{\"deleteQueryConfig\":false,\"description\":null,\"isVirtual\":false,\"searchable\":true,\"title\":\"Name\",\"type\":\"string\",\"userEditable\":true,\"viewable\":true}},\"required\":[\"name\"],\"title\":\"Preference\",\"type\":\"object\"}}]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/config/managed",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"config",
												"managed"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "List all configuration endpoints",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/openidm/config?_prettyPrint=true&_fields=",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"config"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										},
										{
											"key": "_fields",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get oud connector config",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/openidm/config/provisioner.openicf/oud?_prettyPrint=true&_fields=",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"config",
										"provisioner.openicf",
										"oud"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										},
										{
											"key": "_fields",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List mappings",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}"
									}
								],
								"url": {
									"raw": "{{host}}/openidm/config/sync?_prettyPrint=true&_fields=mappings",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"config",
										"sync"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										},
										{
											"key": "_fields",
											"value": "mappings"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List mappings Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin"
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}"
									}
								],
								"url": {
									"raw": "{{host}}/openidm/config/sync?_prettyPrint=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"config",
										"sync"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update mappings",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"_id\": \"sync\",\n    \"mappings\": [\n        {\n            \"target\": \"managed/bravo_user\",\n            \"source\": \"system/idp37/account\",\n            \"name\": \"systemIdp37Account_managedBravo_user\",\n            \"consentRequired\": false,\n            \"icon\": null,\n            \"displayName\": \"systemIdp37Account_managedBravo_user\",\n            \"properties\": [\n                {\n                    \"source\": \"mail\",\n                    \"target\": \"mail\"\n                },\n                {\n                    \"source\": \"uid\",\n                    \"target\": \"userName\"\n                },\n                {\n                    \"source\": \"sn\",\n                    \"target\": \"sn\"\n                },\n                {\n                    \"source\": \"givenName\",\n                    \"target\": \"givenName\"\n                },\n                {\n                    \"source\": \"userPassword\",\n                    \"target\": \"password\",\n                    \"transform\": {\n                        \"type\": \"text/javascript\",\n                        \"globals\": {},\n                        \"source\": \"if (source != null)\\n{\\n var base64 = Packages.org.forgerock.util.encode.Base64url;\\n b64t0 = new Packages.java.lang.String(base64.decode(source));\\n target = b64t0;\\n}\"\n                    }\n                }\n            ],\n            \"policies\": [\n                {\n                    \"action\": \"EXCEPTION\",\n                    \"situation\": \"AMBIGUOUS\"\n                },\n                {\n                    \"action\": \"EXCEPTION\",\n                    \"situation\": \"SOURCE_MISSING\"\n                },\n                {\n                    \"action\": \"EXCEPTION\",\n                    \"situation\": \"MISSING\"\n                },\n                {\n                    \"action\": \"EXCEPTION\",\n                    \"situation\": \"FOUND_ALREADY_LINKED\"\n                },\n                {\n                    \"action\": \"DELETE\",\n                    \"situation\": \"UNQUALIFIED\"\n                },\n                {\n                    \"action\": \"EXCEPTION\",\n                    \"situation\": \"UNASSIGNED\"\n                },\n                {\n                    \"action\": \"EXCEPTION\",\n                    \"situation\": \"LINK_ONLY\"\n                },\n                {\n                    \"action\": \"IGNORE\",\n                    \"situation\": \"TARGET_IGNORED\"\n                },\n                {\n                    \"action\": \"IGNORE\",\n                    \"situation\": \"SOURCE_IGNORED\"\n                },\n                {\n                    \"action\": \"IGNORE\",\n                    \"situation\": \"ALL_GONE\"\n                },\n                {\n                    \"action\": \"UPDATE\",\n                    \"situation\": \"CONFIRMED\"\n                },\n                {\n                    \"action\": \"UPDATE\",\n                    \"situation\": \"FOUND\"\n                },\n                {\n                    \"action\": \"CREATE\",\n                    \"situation\": \"ABSENT\"\n                }\n            ],\n            \"linkQualifiers\": [\n                \"default\"\n            ],\n            \"correlationQuery\": [\n                {\n                    \"linkQualifier\": \"default\",\n                    \"expressionTree\": {\n                        \"any\": [\n                            \"userName\"\n                        ]\n                    },\n                    \"mapping\": \"systemIdp37Account_managedBravo_user\",\n                    \"type\": \"text/javascript\",\n                    \"file\": \"ui/correlateTreeToQueryFilter.js\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/openidm/config/sync",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"config",
										"sync"
									]
								}
							},
							"response": []
						},
						{
							"name": "Connector",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"_id\": \"provisioner.openicf/idp37\",\n    \"connectorRef\": {\n        \"connectorHostRef\": \"rcs_mbp\",\n        \"displayName\": \"LDAP Connector\",\n        \"bundleVersion\": \"1.5.19.1\",\n        \"systemType\": \"provisioner.openicf\",\n        \"bundleName\": \"org.forgerock.openicf.connectors.ldap-connector\",\n        \"connectorName\": \"org.identityconnectors.ldap.LdapConnector\"\n    },\n    \"poolConfigOption\": {\n        \"maxObjects\": 10,\n        \"maxIdle\": 10,\n        \"maxWait\": 150000,\n        \"minEvictableIdleTimeMillis\": 120000,\n        \"minIdle\": 1\n    },\n    \"resultsHandlerConfig\": {\n        \"enableNormalizingResultsHandler\": false,\n        \"enableFilteredResultsHandler\": false,\n        \"enableCaseInsensitiveFilter\": false,\n        \"enableAttributesToGetSearchResultsHandler\": true\n    },\n    \"operationTimeout\": {\n        \"CREATE\": -1,\n        \"UPDATE\": -1,\n        \"DELETE\": -1,\n        \"TEST\": -1,\n        \"SCRIPT_ON_CONNECTOR\": -1,\n        \"SCRIPT_ON_RESOURCE\": -1,\n        \"GET\": -1,\n        \"RESOLVEUSERNAME\": -1,\n        \"AUTHENTICATE\": -1,\n        \"SEARCH\": -1,\n        \"VALIDATE\": -1,\n        \"SYNC\": -1,\n        \"SCHEMA\": -1\n    },\n    \"configurationProperties\": {\n        \"filterWithOrInsteadOfAnd\": false,\n        \"objectClassesToSynchronize\": [\n            \"inetOrgPerson\"\n        ],\n        \"attributesToSynchronize\": [],\n        \"changeNumberAttribute\": \"changeNumber\",\n        \"modifiersNamesToFilterOut\": [],\n        \"credentials\": {\n            \"$crypto\": {\n                \"type\": \"x-simple-encryption\",\n                \"value\": {\n                    \"cipher\": \"AES/CBC/PKCS5Padding\",\n                    \"stableId\": \"openidm-sym-default\",\n                    \"salt\": \"Rc4uWCycj7u7hYr8m3HBog==\",\n                    \"data\": \"iFWtWTs1aWqVD8tc/nlc0g==\",\n                    \"keySize\": 16,\n                    \"purpose\": \"idm.config.encryption\",\n                    \"iv\": \"c7VmRIR0Rg6UL1EEfwjlTw==\",\n                    \"mac\": \"eNV3DXtzPGjfeZyge+kOZw==\"\n                }\n            }\n        },\n        \"changeLogBlockSize\": \"100\",\n        \"useTimestampsForSync\": false,\n        \"accountSynchronizationFilter\": null,\n        \"removeLogEntryObjectClassFromFilter\": true,\n        \"alternateKeyStorePassword\": null,\n        \"groupSynchronizationFilter\": null,\n        \"groupMemberAttribute\": \"uniqueMember\",\n        \"accountSearchFilter\": null,\n        \"privateKeyAlias\": null,\n        \"ssl\": false,\n        \"maintainPosixGroupMembership\": false,\n        \"checkAliveMinInterval\": 60,\n        \"groupSearchFilter\": null,\n        \"referralsHandling\": \"follow\",\n        \"host\": \"idp37.mytestrun.com\",\n        \"maintainLdapGroupMembership\": false,\n        \"resetSyncToken\": \"never\",\n        \"vlvSortAttribute\": \"uid\",\n        \"convertGTToISO8601\": [\n            \"whenCreated\",\n            \"whenChanged\"\n        ],\n        \"baseContexts\": [\n            \"dc=mytestrun,dc=com\"\n        ],\n        \"hostNameVerification\": false,\n        \"blockSize\": \"100\",\n        \"groupObjectClasses\": [\n            \"top\",\n            \"groupOfUniqueNames\"\n        ],\n        \"accountUserNameAttributes\": [\n            \"uid\",\n            \"cn\"\n        ],\n        \"failover\": [],\n        \"port\": \"10389\",\n        \"convertADIntervalToISO8601\": [\n            \"pwdLastSet\",\n            \"accountExpires\",\n            \"lockoutTime\",\n            \"lastLogon\"\n        ],\n        \"hostNameVerifierPattern\": null,\n        \"passwordAttribute\": \"userPassword\",\n        \"useDNSSRVRecord\": false,\n        \"getGroupMemberId\": false,\n        \"lastCheckAlive\": 1608008770074,\n        \"startTLS\": false,\n        \"allowTreeDelete\": false,\n        \"respectResourcePasswordPolicyChangeAfterReset\": false,\n        \"uidAttribute\": \"entryUUID\",\n        \"principal\": \"cn=Directory Manager\",\n        \"accountObjectClasses\": [\n            \"top\",\n            \"person\",\n            \"organizationalPerson\",\n            \"inetOrgPerson\"\n        ],\n        \"alternateKeyStoreType\": null,\n        \"passwordHashAlgorithm\": null,\n        \"alternateKeyStore\": null,\n        \"authType\": \"simple\",\n        \"connectionTimeout\": 30000,\n        \"useBlocks\": false,\n        \"readSchema\": false,\n        \"usePagedResultControl\": false,\n        \"useOldADGUIDFormat\": false,\n        \"sendCAUDTxId\": false,\n        \"gssapiLoginContext\": null,\n        \"baseContextsToSynchronize\": [\n            \"dc=mytestrun,dc=com\"\n        ]\n    },\n    \"enabled\": true,\n    \"objectTypes\" : {\n        \"account\" : {\n            \"$schema\" : \"http://json-schema.org/draft-03/schema\",\n            \"id\" : \"__ACCOUNT__\",\n            \"type\" : \"object\",\n            \"nativeType\" : \"__ACCOUNT__\",\n            \"properties\" : {\n                \"dn\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"__NAME__\",\n                    \"nativeType\" : \"string\",\n                    \"required\" : true\n                },\n                \"objectClass\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeType\" : \"string\",\n                    \"nativeName\" : \"objectClass\",\n                    \"required\" : false\n                },\n                \"cn\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"cn\",\n                    \"nativeType\" : \"string\",\n                    \"required\" : true\n                },\n                \"sn\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"sn\",\n                    \"nativeType\" : \"string\",\n                    \"required\" : true\n                },\n                \"uid\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"uid\",\n                    \"nativeType\" : \"string\"\n                },\n                \"userPassword\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"userPassword\",\n                    \"nativeType\" : \"string\",\n                    \"flags\" : [\n                        \"NOT_READABLE\",\n                        \"NOT_RETURNED_BY_DEFAULT\"\n                    ],\n                    \"runAsUser\" : true\n                },\n                \"ldapGroups\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"ldapGroups\",\n                    \"nativeType\" : \"string\"\n                },\n                \"givenName\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"givenName\",\n                    \"nativeType\" : \"string\"\n                },\n                \"mail\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"mail\",\n                    \"nativeType\" : \"string\"\n                },\n                \"employeeType\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"employeeType\",\n                    \"nativeType\" : \"string\"\n                },\n                \"description\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"description\",\n                    \"nativeType\" : \"string\"\n                },\n                \"telephoneNumber\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"telephoneNumber\",\n                    \"nativeType\" : \"string\"\n                },\n                \"disabled\" : {\n                    \"type\" : \"string\",\n                    \"nativeName\" : \"ds-pwp-account-disabled\",\n                    \"nativeType\" : \"string\"\n                },\n                \"aliasList\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeType\" : \"string\",\n                    \"nativeName\" : \"iplanet-am-user-alias-list\",\n                    \"required\" : false\n                },\n                \"kbaInfo\" : {\n                    \"type\" : \"array\",\n                    \"nativeType\" : \"string\",\n                    \"nativeName\" : \"kbaInfo\",\n                    \"required\" : false\n                }\n            }\n        },\n        \"group\" : {\n            \"$schema\" : \"http://json-schema.org/draft-03/schema\",\n            \"id\" : \"__GROUP__\",\n            \"type\" : \"object\",\n            \"nativeType\" : \"__GROUP__\",\n            \"properties\" : {\n                \"seeAlso\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"seeAlso\",\n                    \"nativeType\" : \"string\"\n                },\n                \"description\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"description\",\n                    \"nativeType\" : \"string\"\n                },\n                \"uniqueMember\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"uniqueMember\",\n                    \"nativeType\" : \"string\"\n                },\n                \"dn\" : {\n                    \"type\" : \"string\",\n                    \"required\" : true,\n                    \"nativeName\" : \"__NAME__\",\n                    \"nativeType\" : \"string\"\n                },\n                \"o\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"o\",\n                    \"nativeType\" : \"string\"\n                },\n                \"ou\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"ou\",\n                    \"nativeType\" : \"string\"\n                },\n                \"businessCategory\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"businessCategory\",\n                    \"nativeType\" : \"string\"\n                },\n                \"owner\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"nativeName\" : \"owner\",\n                    \"nativeType\" : \"string\"\n                },\n                \"cn\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"type\" : \"string\",\n                        \"nativeType\" : \"string\"\n                    },\n                    \"required\" : true,\n                    \"nativeName\" : \"cn\",\n                    \"nativeType\" : \"string\"\n                }\n            }\n        }\n    },\n    \"operationOptions\" : {\n        \"DELETE\" : {\n            \"denied\" : false,\n            \"onDeny\" : \"DO_NOTHING\"\n        },\n        \"UPDATE\" : {\n            \"denied\" : false,\n            \"onDeny\" : \"DO_NOTHING\"\n        },\n        \"CREATE\" : {\n            \"denied\" : false,\n            \"onDeny\" : \"DO_NOTHING\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/openidm/config/provisioner.openicf/idp37",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"config",
										"provisioner.openicf",
										"idp37"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/info",
					"item": [
						{
							"name": "Get version",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/openidm/info/version?_prettyPrint=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"info",
										"version"
									],
									"query": [
										{
											"key": "_prettyPrint",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/internal",
					"item": [
						{
							"name": "/role",
							"item": [
								{
									"name": "Get Internal Role Metadata",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/internal/role?_queryFilter=name+eq+'Tenant1 Admins'&_fields=*,/_meta/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"internal",
												"role"
											],
											"query": [
												{
													"key": "_queryFilter",
													"value": "name+eq+'Tenant1 Admins'"
												},
												{
													"key": "_fields",
													"value": "*,/_meta/*"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "/managed",
					"item": [
						{
							"name": "/user",
							"item": [
								{
									"name": "/alpha",
									"item": [
										{
											"name": "Get all alpha_users",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"console.log(jsonData.result[0]._id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user?_prettyPrint=true&_queryId=query-all&_fields=userName,accountStatus,givenName,sn,mail",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user"
													],
													"query": [
														{
															"key": "_prettyPrint",
															"value": "true"
														},
														{
															"key": "_queryId",
															"value": "query-all"
														},
														{
															"key": "_fields",
															"value": "userName,accountStatus,givenName,sn,mail"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get all alpha_users Copy 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"console.log(jsonData.result[0]._id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user?_prettyPrint=true&_queryId=query-all&_fields=userName,accountStatus,givenName,sn,mail",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user"
													],
													"query": [
														{
															"key": "_prettyPrint",
															"value": "true"
														},
														{
															"key": "_queryId",
															"value": "query-all"
														},
														{
															"key": "_fields",
															"value": "userName,accountStatus,givenName,sn,mail"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user?_queryFilter=telephoneNumber+eq+'+18014735451'&_fields=userName,accountStatus,givenName,sn,mail,preferences,telephoneNumber",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user"
													],
													"query": [
														{
															"key": "_queryFilter",
															"value": "telephoneNumber+eq+'+18014735451'"
														},
														{
															"key": "_fields",
															"value": "userName,accountStatus,givenName,sn,mail,preferences,telephoneNumber"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find users by preference",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user?_queryFilter=preferences/a31d60a2-91e0-40df-a6c4-f70cd97b5676+eq+true&_fields=userName,accountStatus,givenName,sn,mail,preferences",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user"
													],
													"query": [
														{
															"key": "_queryFilter",
															"value": "preferences/a31d60a2-91e0-40df-a6c4-f70cd97b5676+eq+true"
														},
														{
															"key": "_fields",
															"value": "userName,accountStatus,givenName,sn,mail,preferences"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get alpha_user by ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}"
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user/0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4?_fields=*,_meta/*",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user",
														"0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4"
													],
													"query": [
														{
															"key": "_fields",
															"value": "*,_meta/*"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add role",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"operation\": \"add\",\n        \"field\": \"/roles\",\n        \"value\": [{\n            \"_ref\": \"managed/alpha_role/68a2f9e7-6310-4e2f-bfa4-d3594386b462\",\n            \"_refResourceCollection\": \"managed/alpha_role\",\n            \"_refResourceId\": \"68a2f9e7-6310-4e2f-bfa4-d3594386b462\"\n        }]\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user/0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user",
														"0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove role from user",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"operation\": \"remove\",\n        \"field\": \"/roles\",\n        \"value\": {\n            \"_ref\": \"managed/alpha_role/68a2f9e7-6310-4e2f-bfa4-d3594386b462\",\n            \"_refResourceCollection\": \"managed/alpha_role\",\n            \"_refResourceId\": \"68a2f9e7-6310-4e2f-bfa4-d3594386b462\",\n            \"_refProperties\": {\n                \"_id\": \"5c3f131a-1fa5-4d24-96d6-771eba93d1ed\",\n                \"_rev\": \"0000000005bda612\"\n            }\n        }\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user/0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user",
														"0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove role from user",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user/0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4/roles/5c3f131a-1fa5-4d24-96d6-771eba93d1ed",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user",
														"0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4",
														"roles",
														"5c3f131a-1fa5-4d24-96d6-771eba93d1ed"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add preference",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"operation\": \"add\",\n        \"field\": \"/preferences\",\n        \"value\": {\n            \"a31d60a2-91e0-40df-a6c4-f70cd97b5676\": true,\n            \"cfac4e5f-065f-48c1-8cfb-bbd4ff0fd6f0\": true,\n            \"c5a326f4-a76a-4929-a252-937b80c4ec7a\": false\n        }\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user/0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user",
														"0bf0d4fc-6273-4e8e-a2ce-899df2ee96d4"
													]
												}
											},
											"response": []
										},
										{
											"name": "Patch alpha_user by ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"operation\": \"remove\",\n        \"field\": \"/telephoneNumber\"\n    },\n    {\n        \"operation\": \"replace\",\n        \"field\": \"/frIndexedInteger5\",\n        \"value\": 0\n    },\n    {\n        \"operation\": \"replace\",\n        \"field\": \"/frUnindexedInteger5\",\n        \"value\": 0\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user/4827e6ed-e621-4c81-9a7d-038491b1c8d6",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user",
														"4827e6ed-e621-4c81-9a7d-038491b1c8d6"
													]
												}
											},
											"response": []
										},
										{
											"name": "Patch alpha_user password",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"type": "text",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"type": "text",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"operation\": \"replace\",\n        \"field\": \"/password\",\n        \"value\": \"{SSHA512}t34Rm46WutLADaTg4mBF8a6Ocqq6C2wTjaWpjdZ1BQgbckN2gtVtsy3xRra+KbVJFmVtR+pGR+RgFgRByhO5v1mcF0Yyknbr\"\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user/1f0aba31-9131-40ba-89e4-24491ec39c97",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user",
														"1f0aba31-9131-40ba-89e4-24491ec39c97"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get User Copy",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/alpha_user?_queryFilter=userName+eq+'vscheuber'&_fields=/_meta/*",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"alpha_user"
													],
													"query": [
														{
															"key": "_queryFilter",
															"value": "userName+eq+'vscheuber'"
														},
														{
															"key": "_fields",
															"value": "/_meta/*"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get User Metadata Copy",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}"
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/user?_queryFilter=userName+eq+'acarter'&_fields=*,authzRoles,/_meta/*",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"user"
													],
													"query": [
														{
															"key": "_queryFilter",
															"value": "userName+eq+'acarter'"
														},
														{
															"key": "_fields",
															"value": "*,authzRoles,/_meta/*"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "/bravo",
									"item": [
										{
											"name": "Get User Copy",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/bravo_user?_queryFilter=userName+eq+'vscheuber'&_fields=*,roles",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"bravo_user"
													],
													"query": [
														{
															"key": "_queryFilter",
															"value": "userName+eq+'vscheuber'"
														},
														{
															"key": "_fields",
															"value": "*,roles"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get all bravo_users",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{host}}/openidm/managed/bravo_user?_prettyPrint=true&_queryId=query-all&_fields=userName,accountStatus,frIndexedString4",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"bravo_user"
													],
													"query": [
														{
															"key": "_prettyPrint",
															"value": "true"
														},
														{
															"key": "_queryId",
															"value": "query-all"
														},
														{
															"key": "_fields",
															"value": "userName,accountStatus,frIndexedString4"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Patch User by ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{openamAccessToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"type": "text",
														"value": "openidm-admin",
														"disabled": true
													},
													{
														"key": "X-OpenIDM-Password",
														"type": "text",
														"value": "{{openidmPassword}}",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"operation\": \"replace\",\n        \"field\": \"/password\",\n        \"value\": \"{SSHA512}t34Rm46WutLADaTg4mBF8a6Ocqq6C2wTjaWpjdZ1BQgbckN2gtVtsy3xRra+KbVJFmVtR+pGR+RgFgRByhO5v1mcF0Yyknbr\"\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/openidm/managed/bravo_user/7915c860-30c7-4f94-882e-c2a4370374d2",
													"host": [
														"{{host}}"
													],
													"path": [
														"openidm",
														"managed",
														"bravo_user",
														"7915c860-30c7-4f94-882e-c2a4370374d2"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get User Metadata",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/alpha_user?_queryFilter=userName+eq+'vscheuber@gmail.com'&_fields=*,authzRoles,/_meta/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"alpha_user"
											],
											"query": [
												{
													"key": "_queryFilter",
													"value": "userName+eq+'vscheuber@gmail.com'"
												},
												{
													"key": "_fields",
													"value": "*,authzRoles,/_meta/*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/user?_queryFilter=sn+eq+'Lindsey'&_fields=*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"user"
											],
											"query": [
												{
													"key": "_queryFilter",
													"value": "sn+eq+'Lindsey'"
												},
												{
													"key": "_fields",
													"value": "*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all Users",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/user?_prettyPrint=true&_queryId=query-all&_fields=userName,accountStatus,givenName,sn,mail,country,password",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"user"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_queryId",
													"value": "query-all"
												},
												{
													"key": "_fields",
													"value": "userName,accountStatus,givenName,sn,mail,country,password"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/user/32073552-6e51-41d8-b98e-6351d3043a62",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"user",
												"32073552-6e51-41d8-b98e-6351d3043a62"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User by Array Field Value",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/user?_queryFilter=userName+eq+'aadams'+and+frIndexedMultivalued1+eq+'5'",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"user"
											],
											"query": [
												{
													"key": "_queryFilter",
													"value": "userName+eq+'aadams'+and+frIndexedMultivalued1+eq+'5'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patch User by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"operation\": \"replace\",\n        \"field\": \"/sn\",\n        \"value\": \"Scheuber\"\n    },\n    {\n        \"operation\": \"add\",\n        \"field\": \"/roles\",\n        \"value\": [\n            {\n                \"_ref\": \"managed/role/24808eae-4496-471a-9bd8-bbe008776d23\",\n                \"_refResourceCollection\": \"managed/role\"\n            }\n        ]\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/managed/user/32073552-6e51-41d8-b98e-6351d3043a62",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"user",
												"32073552-6e51-41d8-b98e-6351d3043a62"
											]
										}
									},
									"response": []
								},
								{
									"name": "Patch User by ID Copy",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"operation\": \"remove\",\n        \"field\": \"/adminOfOrgIDs\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/managed/user/dc316f67-2588-4c9c-98d6-3af9a8b8e77c",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"user",
												"dc316f67-2588-4c9c-98d6-3af9a8b8e77c"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User (provide ID)",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"type": "text",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"type": "text",
												"value": "{{openidmPassword}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"userName\": \"jbond\",\n    \"password\": \"Password1!\",\n    \"sn\": \"Bond\",\n    \"givenName\": \"James\",\n    \"accountStatus\": \"Active\",\n    \"mail\": \"jbond@mytestrun.com\",\n    \"verified\": false,\n    \"displayName\": \"James Bond\",\n    \"preferences\": {\n        \"updates\": true,\n        \"marketing\": false\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/managed/user/007",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"user",
												"007"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User (random ID)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"type": "text",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"type": "text",
												"value": "{{openidmPassword}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"userName\": \"fmulder\",\n    \"password\": \"Password1!\",\n    \"sn\": \"Mulder\",\n    \"givenName\": \"Fox\",\n    \"accountStatus\": \"Active\",\n    \"mail\": \"fmulder@mytestrun.com\",\n    \"verified\": false,\n    \"displayName\": \"Fox Mulder\",\n    \"preferences\": {\n        \"updates\": true,\n        \"marketing\": false\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/managed/user",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"user"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/role",
							"item": [
								{
									"name": "Get Role Metadata",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/role?_queryFilter=name+eq+'Sales Org Admins'&_fields=*,/_meta/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"role"
											],
											"query": [
												{
													"key": "_queryFilter",
													"value": "name+eq+'Sales Org Admins'"
												},
												{
													"key": "_fields",
													"value": "*,/_meta/*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Role by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/alpha_role/68a2f9e7-6310-4e2f-bfa4-d3594386b462?_fields=*,/_meta/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"alpha_role",
												"68a2f9e7-6310-4e2f-bfa4-d3594386b462"
											],
											"query": [
												{
													"key": "_fields",
													"value": "*,/_meta/*"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/organization",
							"item": [
								{
									"name": "Get all Organizations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/organization?_prettyPrint=true&_queryId=query-all&_fields=name,description,parentLevel,level,type,typedName,rootOrgName,parentName",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"organization"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_queryId",
													"value": "query-all"
												},
												{
													"key": "_fields",
													"value": "name,description,parentLevel,level,type,typedName,rootOrgName,parentName"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all APPs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/organization?_queryFilter=type+eq+'APP'&_fields=name,description,type,/children/name,/parent/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"organization"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true",
													"disabled": true
												},
												{
													"key": "_queryFilter",
													"value": "type+eq+'APP'"
												},
												{
													"key": "_fields",
													"value": "name,description,type,/children/name,/parent/*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all APIs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/organization?_queryFilter=type+eq+'API'&_fields=name,description,type,/children/name,/parent/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"organization"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true",
													"disabled": true
												},
												{
													"key": "_queryFilter",
													"value": "type+eq+'API'"
												},
												{
													"key": "_fields",
													"value": "name,description,type,/children/name,/parent/*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all Roles",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/organization?_queryFilter=type+eq+'ROL'&_fields=name,description,type,permissions",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"organization"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true",
													"disabled": true
												},
												{
													"key": "_queryFilter",
													"value": "type+eq+'ROL'"
												},
												{
													"key": "_fields",
													"value": "name,description,type,permissions"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patch API by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"type": "text",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"type": "text",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"operation\": \"remove\",\n        \"field\": \"/typedName\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/managed/organization/9b8ce648-c4b7-4700-aae8-2116e0e709a9",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"organization",
												"9b8ce648-c4b7-4700-aae8-2116e0e709a9"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Organization Admins and data",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/organization/0fa1119e-b070-4e33-b58b-d98856586ee0?_fields=*,admins/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"organization",
												"0fa1119e-b070-4e33-b58b-d98856586ee0"
											],
											"query": [
												{
													"key": "_fields",
													"value": "*,admins/*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Organization children and data",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/organization?_queryFilter=name+eq+'Org5'&_fields=*,children/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"organization"
											],
											"query": [
												{
													"key": "_queryFilter",
													"value": "name+eq+'Org5'"
												},
												{
													"key": "_fields",
													"value": "*,children/*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Organization Metadata",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/organization?_queryFilter=name+eq+'Sales'&_fields=*,/_meta/*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"organization"
											],
											"query": [
												{
													"key": "_queryFilter",
													"value": "name+eq+'Sales'"
												},
												{
													"key": "_fields",
													"value": "*,/_meta/*"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/teammember",
							"item": [
								{
									"name": "Get All Teammembers",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/teammember?_prettyPrint=true&_queryId=query-all&_fields=*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"teammember"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_queryId",
													"value": "query-all"
												},
												{
													"key": "_fields",
													"value": "*"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/preference",
							"item": [
								{
									"name": "Get all preferences",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin",
												"disabled": true
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{host}}/openidm/managed/preference?_prettyPrint=true&_queryFilter=true&_fields=*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"preference"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_queryFilter",
													"value": "true"
												},
												{
													"key": "_fields",
													"value": "*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove field",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"operation\": \"remove\",\n        \"field\": \"/countries\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/managed/preference/cfac4e5f-065f-48c1-8cfb-bbd4ff0fd6f0",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"managed",
												"preference",
												"cfac4e5f-065f-48c1-8cfb-bbd4ff0fd6f0"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "/recon",
					"item": [
						{
							"name": "Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/openidm/recon",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"recon"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "{{openidmPassword}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/openidm/recon/09cb9339-ff05-443e-9184-bd7a22dabef4-1041515?_action=cancel",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"recon",
										"09cb9339-ff05-443e-9184-bd7a22dabef4-1041515"
									],
									"query": [
										{
											"key": "_action",
											"value": "cancel"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/system",
					"item": [
						{
							"name": "SFDC",
							"item": [
								{
									"name": "Get all SFDC User IDs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/system/SFDC/User?_prettyPrint=true&_queryId=query-all&_fields=userName,accountStatus,displayName,givenName,sn,mail",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"system",
												"SFDC",
												"User"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_queryId",
													"value": "query-all"
												},
												{
													"key": "_fields",
													"value": "userName,accountStatus,displayName,givenName,sn,mail"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SFDC User by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/system/SFDC/User/0054W00000DNCvZQAX?_prettyPrint=true&_fields=FirstName,LastName,Email,Company,IsActive,*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"system",
												"SFDC",
												"User",
												"0054W00000DNCvZQAX"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_fields",
													"value": "FirstName,LastName,Email,Company,IsActive,*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SFDC User by Filter",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"url": {
											"raw": "{{host}}/openidm/system/SFDC/User?_prettyPrint=true&_queryFilter=FirstName+eq+'Wendy'&_fields=*",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"system",
												"SFDC",
												"User"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_queryFilter",
													"value": "FirstName+eq+'Wendy'"
												},
												{
													"key": "_fields",
													"value": "*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patch SFDC User by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{openamAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "X-OpenIDM-Username",
												"value": "openidm-admin"
											},
											{
												"key": "X-OpenIDM-Password",
												"value": "{{openidmPassword}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"operation\": \"replace\",\n        \"field\": \"LastName\",\n        \"value\": \"Lindsey\"\n    },\n    {\n        \"operation\": \"replace\",\n        \"field\": \"IsActive\",\n        \"value\": true\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/openidm/system/SFDC/User/0054W00000DNCvZQAX?_prettyPrint=true&_fields=LastName,IsActive",
											"host": [
												"{{host}}"
											],
											"path": [
												"openidm",
												"system",
												"SFDC",
												"User",
												"0054W00000DNCvZQAX"
											],
											"query": [
												{
													"key": "_prettyPrint",
													"value": "true"
												},
												{
													"key": "_fields",
													"value": "LastName,IsActive"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Core Connector Server Configuration",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "Kemper@2021",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\" : \"remoteConnectorClient\",\n  \"systemType\" : \"provisioner.openicf\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/openidm/system?_action=createConnectorServerCoreConfig",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"system"
									],
									"query": [
										{
											"key": "_action",
											"value": "createConnectorServerCoreConfig"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Remote Connector Servers",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "Kemper@2021",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\" : \"remoteConnectorClient\",\n  \"systemType\" : \"provisioner.openicf\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/openidm/system?_action=availableConnectorServers",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"system"
									],
									"query": [
										{
											"key": "_action",
											"value": "availableConnectorServers"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Remote Connector Server Types Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{openamAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-OpenIDM-Username",
										"value": "openidm-admin",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-OpenIDM-Password",
										"value": "Kemper@2021",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\" : \"remoteConnectorClient\",\n  \"systemType\" : \"provisioner.openicf\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/openidm/system?_action=availableConnectorServers",
									"host": [
										"{{host}}"
									],
									"path": [
										"openidm",
										"system"
									],
									"query": [
										{
											"key": "_action",
											"value": "availableConnectorServers"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Workflow",
					"item": [
						{
							"name": "Processes",
							"item": [
								{
									"name": "Definitions",
									"item": [
										{
											"name": "List Process Definitions (all)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processdefinition?_queryId=query-all-ids",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processdefinition"
													],
													"query": [
														{
															"key": "_queryId",
															"value": "query-all-ids"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Process Definitions (filtered)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"if (jsonData.resultCount > 0) {",
															"    postman.setEnvironmentVariable(\"processDefinitionId\", jsonData.result[0]._id);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processdefinition?_queryId=filtered-query&category=K8s",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processdefinition"
													],
													"query": [
														{
															"key": "_queryId",
															"value": "filtered-query"
														},
														{
															"key": "category",
															"value": "K8s"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Auto Delete Process Filtered Definition (+Instances)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processdefinition/{{processDefinitionId}}?deleteInstances=true",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processdefinition",
														"{{processDefinitionId}}"
													],
													"query": [
														{
															"key": "deleteInstances",
															"value": "true"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Process Definition (+Instances)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processdefinition/NewOwnerApproval:105:2200?deleteInstances=true",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processdefinition",
														"NewOwnerApproval:105:2200"
													],
													"query": [
														{
															"key": "deleteInstances",
															"value": "true"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Instances",
									"item": [
										{
											"name": "List Process Instances (all)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processinstance?_queryId=query-all-ids",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processinstance"
													],
													"query": [
														{
															"key": "_queryId",
															"value": "query-all-ids"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Process Instance By ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processinstance/3681",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processinstance",
														"3681"
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Process Instances",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processinstance?_queryId=filtered-query&startUserId=dcrane",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processinstance"
													],
													"query": [
														{
															"key": "_queryId",
															"value": "filtered-query"
														},
														{
															"key": "startUserId",
															"value": "dcrane"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Process Instance History",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processinstance/history?_queryId=query-all-ids",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processinstance",
														"history"
													],
													"query": [
														{
															"key": "_queryId",
															"value": "query-all-ids"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Process Instance By ID",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processinstance/1291",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processinstance",
														"1291"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Tasks",
							"item": [
								{
									"name": "Definitions",
									"item": [
										{
											"name": "List Task Definitions (all)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/processdefinition/NewOwnerApproval:1:1014/taskdefinition?_queryId=query-all-ids",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"processdefinition",
														"NewOwnerApproval:1:1014",
														"taskdefinition"
													],
													"query": [
														{
															"key": "_queryId",
															"value": "query-all-ids"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Instances",
									"item": [
										{
											"name": "List Task Instances (all)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/taskinstance?_queryId=query-all-ids",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"taskinstance"
													],
													"query": [
														{
															"key": "_queryId",
															"value": "query-all-ids"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Task Instance by Process ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/taskinstance?_queryId=filtered-query&taskDefinitionKey=approval&processInstanceId=2490",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"taskinstance"
													],
													"query": [
														{
															"key": "_queryId",
															"value": "filtered-query"
														},
														{
															"key": "taskDefinitionKey",
															"value": "approval"
														},
														{
															"key": "processInstanceId",
															"value": "2490"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Task Instance By ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/taskinstance/2601",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"taskinstance",
														"2601"
													]
												}
											},
											"response": []
										},
										{
											"name": "Complete Task Instance By ID",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-OpenIDM-Username",
														"value": "{{openidm-username}}"
													},
													{
														"key": "X-OpenIDM-Password",
														"value": "{{openidm-password}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"adminDecision\":\"accept\"}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}{{idm-context}}/workflow/taskinstance/1378?_action=complete",
													"host": [
														"{{host}}{{idm-context}}"
													],
													"path": [
														"workflow",
														"taskinstance",
														"1378"
													],
													"query": [
														{
															"key": "_action",
															"value": "complete"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Login Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"pwdResetToken\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OpenIDM-Username",
								"type": "text",
								"value": "openidm-admin"
							},
							{
								"key": "X-OpenIDM-Password",
								"type": "text",
								"value": "{{openidmPassword}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-OpenIDM-OAuth-Login",
								"type": "text",
								"value": "true",
								"disabled": true
							},
							{
								"key": "X-OpenIDM-DataStoreToken",
								"type": "text",
								"value": "{{idmDataStoreToken}}",
								"disabled": true
							},
							{
								"key": "X-OpenIDM-RunAs",
								"type": "text",
								"value": "vscheuber"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{host}}/openidm/info/login?_prettyPrint=true",
							"host": [
								"{{host}}"
							],
							"path": [
								"openidm",
								"info",
								"login"
							],
							"query": [
								{
									"key": "_prettyPrint",
									"value": "true"
								}
							]
						},
						"description": "Initial Requirements for Password Reset"
					},
					"response": []
				},
				{
					"name": "Prometheus",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password1!",
									"type": "string"
								},
								{
									"key": "username",
									"value": "prometheus",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://prometheus:Prometheus-F0rgeR0ck@{{host}}/openidm/metrics/prometheus",
							"protocol": "https",
							"auth": {
								"user": "prometheus",
								"password": "Prometheus-F0rgeR0ck"
							},
							"host": [
								"{{host}}"
							],
							"path": [
								"openidm",
								"metrics",
								"prometheus"
							]
						}
					},
					"response": []
				}
			],
			"description": "ForgeRock Identity Management REST APIs (applies to both on-prem and PaaS)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "/monitoring",
			"item": [
				{
					"name": "/logs",
					"item": [
						{
							"name": "get Log Events",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"logsPagedResultsCookie\", jsonData.pagedResultsCookie);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{log-api-key}}",
										"type": "text"
									},
									{
										"key": "x-api-secret",
										"value": "{{log-api-secret}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/monitoring/logs?key=&source=am-everything&_pageSize=1000&_pagedResultsCookie={{logsPagedResultsCookie}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"monitoring",
										"logs"
									],
									"query": [
										{
											"key": "key",
											"value": ""
										},
										{
											"key": "source",
											"value": "am-everything"
										},
										{
											"key": "beginTime",
											"value": "2020-08-12T02:19:00.553Z",
											"disabled": true
										},
										{
											"key": "endTime",
											"value": "2020-08-12T03:19:00.553Z",
											"disabled": true
										},
										{
											"key": "_pageSize",
											"value": "1000"
										},
										{
											"key": "_pagedResultsCookie",
											"value": "{{logsPagedResultsCookie}}"
										},
										{
											"key": "_prettyPrint",
											"value": "true",
											"disabled": true
										},
										{
											"key": "_sortKeys",
											"value": "<string>",
											"disabled": true
										}
									]
								},
								"description": "Get log events"
							},
							"response": [
								{
									"name": "List of log events",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/logs?source=<string>&beginTime=<dateTime>&endTime=<dateTime>&_pageSize=<integer>&_pagedResultsCookie=<string>&_prettyPrint=false&_sortKeys=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logs"
											],
											"query": [
												{
													"key": "source",
													"value": "<string>"
												},
												{
													"key": "beginTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												},
												{
													"key": "_pageSize",
													"value": "<integer>"
												},
												{
													"key": "_pagedResultsCookie",
													"value": "<string>"
												},
												{
													"key": "_prettyPrint",
													"value": "false"
												},
												{
													"key": "_sortKeys",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"result\": [\n  {\n   \"payload\": \"10.40.7.28 - - [09/Apr/2020:22:17:40 +0000] GET \\\"/am/isAlive.jsp HTTP/1.0\\\" 200 112 0ms\",\n   \"timestamp\": \"incididunt nisi aliquip\",\n   \"type\": \"text/plain\"\n  },\n  {\n   \"payload\": \"10.40.7.28 - - [09/Apr/2020:22:17:40 +0000] GET \\\"/am/isAlive.jsp HTTP/1.0\\\" 200 112 0ms\",\n   \"timestamp\": \"pariatur enim Duis\",\n   \"type\": \"text/plain\"\n  }\n ],\n \"resultCount\": 1,\n \"pagedResultsCookie\": \"789A6SDF78967FSD89A67689FDAS\",\n \"totalPagedResultsPolicy\": \"NONE\",\n \"totalPagedResults\": -1,\n \"remainingPagedResults\": -1\n}"
								}
							]
						},
						{
							"name": "get Log Sources",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{log-api-key}}",
										"type": "text"
									},
									{
										"key": "x-api-secret",
										"value": "{{log-api-secret}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/monitoring/logs/sources?key=&_prettyPrint=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"monitoring",
										"logs",
										"sources"
									],
									"query": [
										{
											"key": "key",
											"value": ""
										},
										{
											"key": "_pageSize",
											"value": "<integer>",
											"disabled": true
										},
										{
											"key": "_pagedResouresOffset",
											"value": "<integer>",
											"disabled": true
										},
										{
											"key": "_prettyPrint",
											"value": "true"
										}
									]
								},
								"description": "Get log sources"
							},
							"response": [
								{
									"name": "List of log sources",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/logs/sources?_pageSize=<integer>&_pagedResouresOffset=<integer>&_prettyPrint=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logs",
												"sources"
											],
											"query": [
												{
													"key": "_pageSize",
													"value": "<integer>"
												},
												{
													"key": "_pagedResouresOffset",
													"value": "<integer>"
												},
												{
													"key": "_prettyPrint",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"result\": [\n  \"aliquip sit\",\n  \"tempor reprehenderit quis laborum officia\"\n ],\n \"resultCount\": 4,\n \"pagedResultsCookie\": \"in nisi dolor\",\n \"totalPagedResultsPolicy\": \"NONE\",\n \"totalPagedResults\": 1,\n \"remainingPagedResults\": 0\n}"
								}
							]
						},
						{
							"name": "tail Log Events",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"logsPagedResultsCookie\", jsonData.pagedResultsCookie);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{log-api-key}}",
										"type": "text"
									},
									{
										"key": "x-api-secret",
										"value": "{{log-api-secret}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/monitoring/logs/tail?key=&source=am-access,am-activity,am-authentication,am-config,idm-access,idm-activity,idm-authentication,idm-config,idm-sync",
									"host": [
										"{{host}}"
									],
									"path": [
										"monitoring",
										"logs",
										"tail"
									],
									"query": [
										{
											"key": "key",
											"value": ""
										},
										{
											"key": "source",
											"value": "am-access,am-activity,am-authentication,am-config,idm-access,idm-activity,idm-authentication,idm-config,idm-sync"
										},
										{
											"key": "_prettyPrint",
											"value": "true",
											"disabled": true
										},
										{
											"key": "_pagedResultsCookie",
											"value": "{{logsPagedResultsCookie}}",
											"disabled": true
										}
									]
								},
								"description": "Tail log events"
							},
							"response": [
								{
									"name": "List of log events",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/logs/tail?source=<string>&_pagedResultsCookie=<string>&_prettyPrint=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logs",
												"tail"
											],
											"query": [
												{
													"key": "source",
													"value": "<string>"
												},
												{
													"key": "_pagedResultsCookie",
													"value": "<string>"
												},
												{
													"key": "_prettyPrint",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"result\": [\n  {\n   \"payload\": \"10.40.7.28 - - [09/Apr/2020:22:17:40 +0000] GET \\\"/am/isAlive.jsp HTTP/1.0\\\" 200 112 0ms\",\n   \"timestamp\": \"dolor aliqua\",\n   \"type\": \"text/plain\"\n  },\n  {\n   \"payload\": \"10.40.7.28 - - [09/Apr/2020:22:17:40 +0000] GET \\\"/am/isAlive.jsp HTTP/1.0\\\" 200 112 0ms\",\n   \"timestamp\": \"labore occaecat aliqua c\",\n   \"type\": \"text/plain\"\n  }\n ],\n \"resultCount\": 1,\n \"pagedResultsCookie\": \"789A6SDF78967FSD89A67689FDAS\",\n \"totalPagedResultsPolicy\": \"NONE\",\n \"totalPagedResults\": -1,\n \"remainingPagedResults\": -1\n}"
								}
							]
						}
					]
				},
				{
					"name": "/prometheus",
					"item": [
						{
							"name": "Prometheus Metrics",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{log-api-secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{log-api-key}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/monitoring/prometheus/am",
									"host": [
										"{{host}}"
									],
									"path": [
										"monitoring",
										"prometheus",
										"am"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}